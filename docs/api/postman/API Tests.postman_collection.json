{
	"info": {
		"_postman_id": "e6a7c85e-2ce1-47b0-a0cf-4429f427d96d",
		"name": "API Tests",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Boards",
			"item": [
				{
					"name": "Create Board",
					"item": [
						{
							"name": "Create board",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "bb250ed3-39bd-43d1-b598-6a5f9baa1241",
										"exec": [
											"pm.test(\"Response status is 201 when success\", () => {\r",
											"    pm.expect(pm.response.code).to.be.equals(201);\r",
											"    pm.expect(pm.response).to.have.header(\"Location\");\r",
											"});\r",
											"\r",
											"pm.test(\"Response status is 200 when fetch the Location header\", () => {\r",
											"    const location = pm.response.headers.get(\"Location\");\r",
											"    const bearerToken = pm.environment.get(\"bearerToken\");\r",
											"    pm.sendRequest({\r",
											"        url: location,\r",
											"        method: 'GET',\r",
											"        header: {\r",
											"            'Authorization': `Bearer ${bearerToken}`\r",
											"        },\r",
											"    }, (err, response) => {\r",
											"        pm.expect(response.code).to.be.equals(200);\r",
											"    });\r",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "f4853e30-aaf7-4b57-9c4f-59506ec551c9",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{bearerToken}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"title\": \"Untitled\"\n}",
									"options": {
										"raw": {}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/boards",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"boards"
									]
								},
								"description": "Create a board with three default lists each one with one default task and the user as admin"
							},
							"response": [
								{
									"name": "Created board object",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: bearer",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/boards",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"boards"
											]
										}
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Location",
											"value": "https://WcFuaFUQuGQybIDcf.foiO8rX3bMKFhaegSL,-Fa6ui2YTEPUkZWjkyoI,XDkyQ4o",
											"description": "URL where the resource can be accessed"
										},
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"id\": 64523723,\n \"createdOn\": \"1998-09-01T02:51:18.143Z\",\n \"modifiedOn\": \"1969-07-15T00:48:06.726Z\",\n \"title\": \"sint\"\n}"
								},
								{
									"name": "Access token is missing or invalid",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: bearer",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/boards",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"boards"
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "www-authenticate",
											"value": "nulla et",
											"description": ""
										},
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "One or more validation errors occurred.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: bearer",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/boards",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"boards"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"status\": 400,\n \"message\": \"One or more validation errors occurred.\",\n \"errors\": [\n  {\n   \"message\": \"Title is mandatory\",\n   \"property\": \"Title\"\n  }\n ]\n}"
								}
							]
						},
						{
							"name": "Create board with title with 150 characters",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "13e1fab1-2a93-43ed-8c7a-c0532ae8ec35",
										"exec": [
											"pm.test(\"Response status is 201 when success\", () => {\r",
											"    pm.expect(pm.response.code).to.be.equals(201);\r",
											"    pm.expect(pm.response).to.have.header(\"Location\");\r",
											"});\r",
											"\r",
											"pm.test(\"Response status is 200 when fetch the Location header\", () => {\r",
											"    const location = pm.response.headers.get(\"Location\");\r",
											"    const bearerToken = pm.environment.get(\"bearerToken\");\r",
											"    pm.sendRequest({\r",
											"        url: location,\r",
											"        method: 'GET',\r",
											"        header: {\r",
											"            'Authorization': `Bearer ${bearerToken}`\r",
											"        },\r",
											"    }, (err, response) => {\r",
											"        pm.expect(response.code).to.be.equals(200);\r",
											"    });\r",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "7a0c650e-b459-4a71-97c3-2d06af2cfe2c",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{bearerToken}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"title\": \"Board Title with 150 Character spXJXWbBW9YlIOmbAtFkBXnzpVNkhuT3QnCCXbfB6CHRztkZDqCBHIXUJDp8w1119dckmcWLHnCbExEjyOzjoXIxCYiHqmjogxfFQR5y43YWG7GgzyTNXP6\"\n}",
									"options": {
										"raw": {}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/boards",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"boards"
									]
								},
								"description": "Create a board with three default lists each one with one default task and the user as admin"
							},
							"response": [
								{
									"name": "One or more validation errors occurred.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: bearer",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/boards",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"boards"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"status\": 400,\n \"message\": \"One or more validation errors occurred.\",\n \"errors\": [\n  {\n   \"message\": \"Title is mandatory\",\n   \"property\": \"Title\"\n  }\n ]\n}"
								},
								{
									"name": "Created board object",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: bearer",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/boards",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"boards"
											]
										}
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Location",
											"value": "https://WcFuaFUQuGQybIDcf.foiO8rX3bMKFhaegSL,-Fa6ui2YTEPUkZWjkyoI,XDkyQ4o",
											"description": "URL where the resource can be accessed"
										},
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"id\": 64523723,\n \"createdOn\": \"1998-09-01T02:51:18.143Z\",\n \"modifiedOn\": \"1969-07-15T00:48:06.726Z\",\n \"title\": \"sint\"\n}"
								},
								{
									"name": "Access token is missing or invalid",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: bearer",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/boards",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"boards"
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "www-authenticate",
											"value": "nulla et",
											"description": ""
										},
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Create board with empty title",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "ca96746f-f387-42d3-8e6e-a016ce7097d9",
										"exec": [
											"pm.test(\"Response status is 400 when title is empty\", () => {\r",
											"    pm.expect(pm.response.code).to.be.equals(400);\r",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "e1e7d40a-2ca5-4a22-a948-e6fe849721bc",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{bearerToken}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"title\": \"\"\n}",
									"options": {
										"raw": {}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/boards",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"boards"
									]
								},
								"description": "Create a board with three default lists each one with one default task and the user as admin"
							},
							"response": [
								{
									"name": "One or more validation errors occurred.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: bearer",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/boards",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"boards"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"status\": 400,\n \"message\": \"One or more validation errors occurred.\",\n \"errors\": [\n  {\n   \"message\": \"Title is mandatory\",\n   \"property\": \"Title\"\n  }\n ]\n}"
								},
								{
									"name": "Access token is missing or invalid",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: bearer",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/boards",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"boards"
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "www-authenticate",
											"value": "nulla et",
											"description": ""
										},
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Created board object",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: bearer",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/boards",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"boards"
											]
										}
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Location",
											"value": "https://WcFuaFUQuGQybIDcf.foiO8rX3bMKFhaegSL,-Fa6ui2YTEPUkZWjkyoI,XDkyQ4o",
											"description": "URL where the resource can be accessed"
										},
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"id\": 64523723,\n \"createdOn\": \"1998-09-01T02:51:18.143Z\",\n \"modifiedOn\": \"1969-07-15T00:48:06.726Z\",\n \"title\": \"sint\"\n}"
								}
							]
						},
						{
							"name": "Create board with title longer than 150 characters",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "da72f4ac-cc0b-4beb-b92c-f1509dde5020",
										"exec": [
											"pm.test(\"Response status is 400 when title is longer than 150 characters\", () => {\r",
											"    pm.expect(pm.response.code).to.be.equals(400);\r",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "27eb3b54-3bbd-492d-8e75-ef0937a13304",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{bearerToken}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"title\": \"Board Title with more than 150 Character spXJXWbBW9YlIOmbAtFkBXnzpVNkhuT3QnCCXbfB6CHRztkZDqCBHIXUJDp8w1119dckmcWLHnCbExEjyOzjoXIxCYiHqmjogxfFQR5y43YWG7GgzyTNXP6\"\n}",
									"options": {
										"raw": {}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/boards",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"boards"
									]
								},
								"description": "Create a board with three default lists each one with one default task and the user as admin"
							},
							"response": [
								{
									"name": "One or more validation errors occurred.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: bearer",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/boards",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"boards"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"status\": 400,\n \"message\": \"One or more validation errors occurred.\",\n \"errors\": [\n  {\n   \"message\": \"Title is mandatory\",\n   \"property\": \"Title\"\n  }\n ]\n}"
								},
								{
									"name": "Access token is missing or invalid",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: bearer",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/boards",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"boards"
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "www-authenticate",
											"value": "nulla et",
											"description": ""
										},
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Created board object",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: bearer",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/boards",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"boards"
											]
										}
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Location",
											"value": "https://WcFuaFUQuGQybIDcf.foiO8rX3bMKFhaegSL,-Fa6ui2YTEPUkZWjkyoI,XDkyQ4o",
											"description": "URL where the resource can be accessed"
										},
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"id\": 64523723,\n \"createdOn\": \"1998-09-01T02:51:18.143Z\",\n \"modifiedOn\": \"1969-07-15T00:48:06.726Z\",\n \"title\": \"sint\"\n}"
								}
							]
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "{boardId}",
					"item": [
						{
							"name": "Members",
							"item": [
								{
									"name": "Add member",
									"item": [
										{
											"name": "Add member",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "e71467ff-0e72-4400-a839-183d6c7a8d62",
														"exec": [
															"pm.test(\"Response status is 204 when success\", () => {\r",
															"    pm.expect(pm.response.code).to.be.equals(204);\r",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"email\": \"{{adminMemberEmail}}\",\n    \"isAdmin\": true\n}",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/boards/:boardId/members",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"boards",
														":boardId",
														"members"
													],
													"variable": [
														{
															"key": "boardId",
															"value": "{{existentBoardId}}"
														}
													]
												}
											},
											"response": [
												{
													"name": "One or more validation errors occurred.",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"description": {
																	"content": "Added as a part of security scheme: bearer",
																	"type": "text/plain"
																},
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/boards/:boardId/members",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"boards",
																":boardId",
																"members"
															],
															"variable": [
																{
																	"key": "boardId"
																}
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"status\": 400,\n \"message\": \"One or more validation errors occurred.\",\n \"errors\": [\n  {\n   \"message\": \"IsAdmin is mandatory\",\n   \"property\": \"IsAdmin\"\n  }\n ]\n}"
												},
												{
													"name": "Board or user not found",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"description": {
																	"content": "Added as a part of security scheme: bearer",
																	"type": "text/plain"
																},
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/boards/:boardId/members",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"boards",
																":boardId",
																"members"
															],
															"variable": [
																{
																	"key": "boardId"
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"status\": 404,\n \"message\": \"User not found\"\n}"
												},
												{
													"name": "Access token is missing or invalid",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"description": {
																	"content": "Added as a part of security scheme: bearer",
																	"type": "text/plain"
																},
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/boards/:boardId/members",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"boards",
																":boardId",
																"members"
															],
															"variable": [
																{
																	"key": "boardId"
																}
															]
														}
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "www-authenticate",
															"value": "nulla et",
															"description": ""
														},
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"name": "Member was added",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"description": {
																	"content": "Added as a part of security scheme: bearer",
																	"type": "text/plain"
																},
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/boards/:boardId/members",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"boards",
																":boardId",
																"members"
															],
															"variable": [
																{
																	"key": "boardId"
																}
															]
														}
													},
													"status": "No Content",
													"code": 204,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"name": "User not have permission to access the resource",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"description": {
																	"content": "Added as a part of security scheme: bearer",
																	"type": "text/plain"
																},
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/boards/:boardId/members",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"boards",
																":boardId",
																"members"
															],
															"variable": [
																{
																	"key": "boardId"
																}
															]
														}
													},
													"status": "Forbidden",
													"code": 403,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												}
											]
										},
										{
											"name": "Add member as user who is not admin",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "7994bc1d-0248-440e-aa2b-f8f5cc6c724e",
														"exec": [
															"pm.test(\"Response status is 403 when try to add member as user who is not admin\", () => {\r",
															"    pm.expect(pm.response.code).to.be.equals(403);\r",
															"});"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"id": "36fb1f72-215c-4d4d-a4a0-150ae3327326",
														"exec": [
															"const baseUrl = pm.environment.get('baseUrl');\r",
															"function url(uri) {\r",
															"    return `${baseUrl}${uri}`;\r",
															"}\r",
															"\r",
															"const user = {\r",
															"    email: pm.environment.get('memberEmail'),\r",
															"    password: 'password'\r",
															"};\r",
															"\r",
															"pm.sendRequest({\r",
															"    url: url('/login'),\r",
															"    method: 'POST',\r",
															"    header: {\r",
															"        'Content-Type': 'application/json',\r",
															"    },\r",
															"    body: {\r",
															"        mode: 'raw',\r",
															"        raw: JSON.stringify(user)\r",
															"    }\r",
															"}, \r",
															"(err, response) => {\r",
															"    const { token } = response.json();\r",
															"    pm.environment.set(\"bearerToken\", token);\r",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"email\": \"{{adminMemberEmail}}\",\n    \"isAdmin\": true\n}",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/boards/:boardId/members",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"boards",
														":boardId",
														"members"
													],
													"variable": [
														{
															"key": "boardId",
															"value": "{{existentBoardId}}"
														}
													]
												}
											},
											"response": [
												{
													"name": "Member was added",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"description": {
																	"content": "Added as a part of security scheme: bearer",
																	"type": "text/plain"
																},
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/boards/:boardId/members",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"boards",
																":boardId",
																"members"
															],
															"variable": [
																{
																	"key": "boardId"
																}
															]
														}
													},
													"status": "No Content",
													"code": 204,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"name": "Access token is missing or invalid",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"description": {
																	"content": "Added as a part of security scheme: bearer",
																	"type": "text/plain"
																},
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/boards/:boardId/members",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"boards",
																":boardId",
																"members"
															],
															"variable": [
																{
																	"key": "boardId"
																}
															]
														}
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "www-authenticate",
															"value": "nulla et",
															"description": ""
														},
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"name": "Board or user not found",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"description": {
																	"content": "Added as a part of security scheme: bearer",
																	"type": "text/plain"
																},
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/boards/:boardId/members",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"boards",
																":boardId",
																"members"
															],
															"variable": [
																{
																	"key": "boardId"
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"status\": 404,\n \"message\": \"User not found\"\n}"
												},
												{
													"name": "One or more validation errors occurred.",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"description": {
																	"content": "Added as a part of security scheme: bearer",
																	"type": "text/plain"
																},
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/boards/:boardId/members",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"boards",
																":boardId",
																"members"
															],
															"variable": [
																{
																	"key": "boardId"
																}
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"status\": 400,\n \"message\": \"One or more validation errors occurred.\",\n \"errors\": [\n  {\n   \"message\": \"IsAdmin is mandatory\",\n   \"property\": \"IsAdmin\"\n  }\n ]\n}"
												},
												{
													"name": "User not have permission to access the resource",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"description": {
																	"content": "Added as a part of security scheme: bearer",
																	"type": "text/plain"
																},
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/boards/:boardId/members",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"boards",
																":boardId",
																"members"
															],
															"variable": [
																{
																	"key": "boardId"
																}
															]
														}
													},
													"status": "Forbidden",
													"code": 403,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												}
											]
										},
										{
											"name": "Add member as user who is not member of the board",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "4e7137ed-a119-4c22-af28-58e6ffb62925",
														"exec": [
															"pm.test(\"Response status is 403 when try to add member as user who is not member of the board\", () => {\r",
															"    pm.expect(pm.response.code).to.be.equals(403);\r",
															"});"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"id": "68d5dccb-8fec-4c6f-a524-f03901d259b1",
														"exec": [
															"const baseUrl = pm.environment.get('baseUrl');\r",
															"function url(uri) {\r",
															"    return `${baseUrl}${uri}`;\r",
															"}\r",
															"\r",
															"const user = {\r",
															"    email: pm.environment.get('notMemberEmail'),\r",
															"    password: 'password'\r",
															"};\r",
															"\r",
															"pm.sendRequest({\r",
															"    url: url('/login'),\r",
															"    method: 'POST',\r",
															"    header: {\r",
															"        'Content-Type': 'application/json',\r",
															"    },\r",
															"    body: {\r",
															"        mode: 'raw',\r",
															"        raw: JSON.stringify(user)\r",
															"    }\r",
															"}, \r",
															"(err, response) => {\r",
															"    const { token } = response.json();\r",
															"    pm.environment.set(\"bearerToken\", token);\r",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"email\": \"{{adminMemberEmail}}\",\n    \"isAdmin\": true\n}",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/boards/:boardId/members",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"boards",
														":boardId",
														"members"
													],
													"variable": [
														{
															"key": "boardId",
															"value": "{{existentBoardId}}"
														}
													]
												}
											},
											"response": [
												{
													"name": "Member was added",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"description": {
																	"content": "Added as a part of security scheme: bearer",
																	"type": "text/plain"
																},
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/boards/:boardId/members",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"boards",
																":boardId",
																"members"
															],
															"variable": [
																{
																	"key": "boardId"
																}
															]
														}
													},
													"status": "No Content",
													"code": 204,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"name": "Access token is missing or invalid",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"description": {
																	"content": "Added as a part of security scheme: bearer",
																	"type": "text/plain"
																},
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/boards/:boardId/members",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"boards",
																":boardId",
																"members"
															],
															"variable": [
																{
																	"key": "boardId"
																}
															]
														}
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "www-authenticate",
															"value": "nulla et",
															"description": ""
														},
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"name": "One or more validation errors occurred.",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"description": {
																	"content": "Added as a part of security scheme: bearer",
																	"type": "text/plain"
																},
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/boards/:boardId/members",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"boards",
																":boardId",
																"members"
															],
															"variable": [
																{
																	"key": "boardId"
																}
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"status\": 400,\n \"message\": \"One or more validation errors occurred.\",\n \"errors\": [\n  {\n   \"message\": \"IsAdmin is mandatory\",\n   \"property\": \"IsAdmin\"\n  }\n ]\n}"
												},
												{
													"name": "Board or user not found",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"description": {
																	"content": "Added as a part of security scheme: bearer",
																	"type": "text/plain"
																},
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/boards/:boardId/members",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"boards",
																":boardId",
																"members"
															],
															"variable": [
																{
																	"key": "boardId"
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"status\": 404,\n \"message\": \"User not found\"\n}"
												},
												{
													"name": "User not have permission to access the resource",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"description": {
																	"content": "Added as a part of security scheme: bearer",
																	"type": "text/plain"
																},
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/boards/:boardId/members",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"boards",
																":boardId",
																"members"
															],
															"variable": [
																{
																	"key": "boardId"
																}
															]
														}
													},
													"status": "Forbidden",
													"code": 403,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												}
											]
										},
										{
											"name": "Add member who is not admin",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "7a68e45f-8423-44d8-b1c2-ea8cc90a6b1a",
														"exec": [
															"pm.test(\"Response status is 204 when success\", () => {\r",
															"    pm.expect(pm.response.code).to.be.equals(204);\r",
															"});"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"id": "767805f3-84de-4d94-add0-7d3b7b20c593",
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"email\": \"{{memberEmail}}\",\n    \"isAdmin\": false\n}",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/boards/:boardId/members",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"boards",
														":boardId",
														"members"
													],
													"variable": [
														{
															"key": "boardId",
															"value": "{{existentBoardId}}"
														}
													]
												}
											},
											"response": [
												{
													"name": "Access token is missing or invalid",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"description": {
																	"content": "Added as a part of security scheme: bearer",
																	"type": "text/plain"
																},
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/boards/:boardId/members",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"boards",
																":boardId",
																"members"
															],
															"variable": [
																{
																	"key": "boardId"
																}
															]
														}
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "www-authenticate",
															"value": "nulla et",
															"description": ""
														},
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"name": "User not have permission to access the resource",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"description": {
																	"content": "Added as a part of security scheme: bearer",
																	"type": "text/plain"
																},
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/boards/:boardId/members",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"boards",
																":boardId",
																"members"
															],
															"variable": [
																{
																	"key": "boardId"
																}
															]
														}
													},
													"status": "Forbidden",
													"code": 403,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"name": "Member was added",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"description": {
																	"content": "Added as a part of security scheme: bearer",
																	"type": "text/plain"
																},
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/boards/:boardId/members",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"boards",
																":boardId",
																"members"
															],
															"variable": [
																{
																	"key": "boardId"
																}
															]
														}
													},
													"status": "No Content",
													"code": 204,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"name": "One or more validation errors occurred.",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"description": {
																	"content": "Added as a part of security scheme: bearer",
																	"type": "text/plain"
																},
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/boards/:boardId/members",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"boards",
																":boardId",
																"members"
															],
															"variable": [
																{
																	"key": "boardId"
																}
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"status\": 400,\n \"message\": \"One or more validation errors occurred.\",\n \"errors\": [\n  {\n   \"message\": \"IsAdmin is mandatory\",\n   \"property\": \"IsAdmin\"\n  }\n ]\n}"
												},
												{
													"name": "Board or user not found",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"description": {
																	"content": "Added as a part of security scheme: bearer",
																	"type": "text/plain"
																},
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/boards/:boardId/members",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"boards",
																":boardId",
																"members"
															],
															"variable": [
																{
																	"key": "boardId"
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"status\": 404,\n \"message\": \"User not found\"\n}"
												}
											]
										},
										{
											"name": "Add member when board not exist",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "0a9b0005-a577-4cf2-b0ff-a1bb9a4cfff2",
														"exec": [
															"pm.test(\"Response status is 404 when board not exists\", () => {\r",
															"    pm.expect(pm.response.code).to.be.equals(404);\r",
															"});"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"id": "fea62cf8-c559-4fc5-81f9-ce73d0995c86",
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"email\": \"{{memberEmail}}\",\n    \"isAdmin\": false\n}",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/boards/:boardId/members",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"boards",
														":boardId",
														"members"
													],
													"variable": [
														{
															"key": "boardId",
															"value": "{{inexistentBoardId}}"
														}
													]
												}
											},
											"response": [
												{
													"name": "One or more validation errors occurred.",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"description": {
																	"content": "Added as a part of security scheme: bearer",
																	"type": "text/plain"
																},
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/boards/:boardId/members",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"boards",
																":boardId",
																"members"
															],
															"variable": [
																{
																	"key": "boardId"
																}
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"status\": 400,\n \"message\": \"One or more validation errors occurred.\",\n \"errors\": [\n  {\n   \"message\": \"IsAdmin is mandatory\",\n   \"property\": \"IsAdmin\"\n  }\n ]\n}"
												},
												{
													"name": "Member was added",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"description": {
																	"content": "Added as a part of security scheme: bearer",
																	"type": "text/plain"
																},
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/boards/:boardId/members",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"boards",
																":boardId",
																"members"
															],
															"variable": [
																{
																	"key": "boardId"
																}
															]
														}
													},
													"status": "No Content",
													"code": 204,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"name": "Access token is missing or invalid",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"description": {
																	"content": "Added as a part of security scheme: bearer",
																	"type": "text/plain"
																},
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/boards/:boardId/members",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"boards",
																":boardId",
																"members"
															],
															"variable": [
																{
																	"key": "boardId"
																}
															]
														}
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "www-authenticate",
															"value": "nulla et",
															"description": ""
														},
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"name": "User not have permission to access the resource",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"description": {
																	"content": "Added as a part of security scheme: bearer",
																	"type": "text/plain"
																},
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/boards/:boardId/members",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"boards",
																":boardId",
																"members"
															],
															"variable": [
																{
																	"key": "boardId"
																}
															]
														}
													},
													"status": "Forbidden",
													"code": 403,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"name": "Board or user not found",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"description": {
																	"content": "Added as a part of security scheme: bearer",
																	"type": "text/plain"
																},
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/boards/:boardId/members",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"boards",
																":boardId",
																"members"
															],
															"variable": [
																{
																	"key": "boardId"
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"status\": 404,\n \"message\": \"User not found\"\n}"
												}
											]
										},
										{
											"name": "Add member who not exists",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "ff244d6d-7c28-427c-9d0e-ad8fc562aa5c",
														"exec": [
															"pm.test(\"Response status is 404 when user to add not exist\", () => {\r",
															"    pm.expect(pm.response.code).to.be.equals(404);\r",
															"});"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"id": "00ce7c32-9db0-4446-8195-e637e4f6d70a",
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"email\": \"unknow@example.com\",\n    \"isAdmin\": false\n}",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/boards/:boardId/members",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"boards",
														":boardId",
														"members"
													],
													"variable": [
														{
															"key": "boardId",
															"value": "{{existentBoardId}}"
														}
													]
												}
											},
											"response": [
												{
													"name": "Access token is missing or invalid",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"description": {
																	"content": "Added as a part of security scheme: bearer",
																	"type": "text/plain"
																},
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/boards/:boardId/members",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"boards",
																":boardId",
																"members"
															],
															"variable": [
																{
																	"key": "boardId"
																}
															]
														}
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "www-authenticate",
															"value": "nulla et",
															"description": ""
														},
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"name": "Board or user not found",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"description": {
																	"content": "Added as a part of security scheme: bearer",
																	"type": "text/plain"
																},
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/boards/:boardId/members",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"boards",
																":boardId",
																"members"
															],
															"variable": [
																{
																	"key": "boardId"
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"status\": 404,\n \"message\": \"User not found\"\n}"
												},
												{
													"name": "Member was added",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"description": {
																	"content": "Added as a part of security scheme: bearer",
																	"type": "text/plain"
																},
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/boards/:boardId/members",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"boards",
																":boardId",
																"members"
															],
															"variable": [
																{
																	"key": "boardId"
																}
															]
														}
													},
													"status": "No Content",
													"code": 204,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"name": "One or more validation errors occurred.",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"description": {
																	"content": "Added as a part of security scheme: bearer",
																	"type": "text/plain"
																},
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/boards/:boardId/members",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"boards",
																":boardId",
																"members"
															],
															"variable": [
																{
																	"key": "boardId"
																}
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"status\": 400,\n \"message\": \"One or more validation errors occurred.\",\n \"errors\": [\n  {\n   \"message\": \"IsAdmin is mandatory\",\n   \"property\": \"IsAdmin\"\n  }\n ]\n}"
												},
												{
													"name": "User not have permission to access the resource",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"description": {
																	"content": "Added as a part of security scheme: bearer",
																	"type": "text/plain"
																},
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/boards/:boardId/members",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"boards",
																":boardId",
																"members"
															],
															"variable": [
																{
																	"key": "boardId"
																}
															]
														}
													},
													"status": "Forbidden",
													"code": 403,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												}
											]
										},
										{
											"name": "Add member when not authenticated",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "06c85e48-f17c-4502-b4f0-625da2c04267",
														"exec": [
															"pm.test(\"Response status is 401 when not authenticated\", () => {\r",
															"    pm.expect(pm.response.code).to.be.equals(401);\r",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "noauth"
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"email\": \"{{adminMemberEmail}}\",\n    \"isAdmin\": true\n}",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/boards/:boardId/members",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"boards",
														":boardId",
														"members"
													],
													"variable": [
														{
															"key": "boardId",
															"value": "{{existentBoardId}}"
														}
													]
												}
											},
											"response": [
												{
													"name": "User not have permission to access the resource",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"description": {
																	"content": "Added as a part of security scheme: bearer",
																	"type": "text/plain"
																},
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/boards/:boardId/members",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"boards",
																":boardId",
																"members"
															],
															"variable": [
																{
																	"key": "boardId"
																}
															]
														}
													},
													"status": "Forbidden",
													"code": 403,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"name": "Board or user not found",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"description": {
																	"content": "Added as a part of security scheme: bearer",
																	"type": "text/plain"
																},
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/boards/:boardId/members",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"boards",
																":boardId",
																"members"
															],
															"variable": [
																{
																	"key": "boardId"
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"status\": 404,\n \"message\": \"User not found\"\n}"
												},
												{
													"name": "Member was added",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"description": {
																	"content": "Added as a part of security scheme: bearer",
																	"type": "text/plain"
																},
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/boards/:boardId/members",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"boards",
																":boardId",
																"members"
															],
															"variable": [
																{
																	"key": "boardId"
																}
															]
														}
													},
													"status": "No Content",
													"code": 204,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"name": "Access token is missing or invalid",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"description": {
																	"content": "Added as a part of security scheme: bearer",
																	"type": "text/plain"
																},
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/boards/:boardId/members",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"boards",
																":boardId",
																"members"
															],
															"variable": [
																{
																	"key": "boardId"
																}
															]
														}
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "www-authenticate",
															"value": "nulla et",
															"description": ""
														},
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"name": "One or more validation errors occurred.",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"description": {
																	"content": "Added as a part of security scheme: bearer",
																	"type": "text/plain"
																},
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/boards/:boardId/members",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"boards",
																":boardId",
																"members"
															],
															"variable": [
																{
																	"key": "boardId"
																}
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"status\": 400,\n \"message\": \"One or more validation errors occurred.\",\n \"errors\": [\n  {\n   \"message\": \"IsAdmin is mandatory\",\n   \"property\": \"IsAdmin\"\n  }\n ]\n}"
												}
											]
										}
									],
									"protocolProfileBehavior": {},
									"_postman_isSubFolder": true
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						},
						{
							"name": "Lists",
							"item": [
								{
									"name": "Create List",
									"item": [
										{
											"name": "Create a empty list",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "5464e2fe-fee8-4b1b-8c64-7e2d16d800d3",
														"exec": [
															"pm.test(\"Response status is 201 when success\", () => {\r",
															"    pm.expect(pm.response.code).to.be.equals(201);\r",
															"    pm.expect(pm.response).to.have.header(\"Location\");\r",
															"});\r",
															"\r",
															"pm.test(\"Response status is 200 when fetch the Location header\", () => {\r",
															"    const location = pm.response.headers.get(\"Location\");\r",
															"    const bearerToken = pm.environment.get(\"bearerToken\");\r",
															"    pm.sendRequest({\r",
															"        url: location,\r",
															"        method: 'GET',\r",
															"        header: {\r",
															"            'Authorization': `Bearer ${bearerToken}`\r",
															"        },\r",
															"    }, (err, response) => {\r",
															"        pm.expect(response.code).to.be.equals(200);\r",
															"    });\r",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"title\": \"My List\"\n}",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/boards/:boardId/lists",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"boards",
														":boardId",
														"lists"
													],
													"variable": [
														{
															"description": "(Required) Numeric id of the board",
															"key": "boardId",
															"type": "string",
															"value": "{{existentBoardId}}"
														}
													]
												}
											},
											"response": [
												{
													"name": "Access token is missing or invalid",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"description": {
																	"content": "Added as a part of security scheme: bearer",
																	"type": "text/plain"
																},
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/boards/:boardId/lists",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"boards",
																":boardId",
																"lists"
															],
															"variable": [
																{
																	"key": "boardId"
																}
															]
														}
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "www-authenticate",
															"value": "nulla et",
															"description": ""
														},
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"name": "Board not found",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"description": {
																	"content": "Added as a part of security scheme: bearer",
																	"type": "text/plain"
																},
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/boards/:boardId/lists",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"boards",
																":boardId",
																"lists"
															],
															"variable": [
																{
																	"key": "boardId"
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"status\": 404,\n \"message\": \"Board not found\"\n}"
												},
												{
													"name": "Created list object",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"description": {
																	"content": "Added as a part of security scheme: bearer",
																	"type": "text/plain"
																},
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/boards/:boardId/lists",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"boards",
																":boardId",
																"lists"
															],
															"variable": [
																{
																	"key": "boardId"
																}
															]
														}
													},
													"status": "Created",
													"code": 201,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Location",
															"value": "nulla et",
															"description": "URL where the resource can be accessed"
														},
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"id\": 28891984,\n \"title\": \"est voluptate ipsum eiusmod\",\n \"tasks\": [\n  \"min\",\n  \"dolore reprehenderit ex in\"\n ],\n \"createdOn\": \"anim\",\n \"modifiedOn\": \"dolor quis culpa\"\n}"
												},
												{
													"name": "One or more validation errors occurred.",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"description": {
																	"content": "Added as a part of security scheme: bearer",
																	"type": "text/plain"
																},
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/boards/:boardId/lists",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"boards",
																":boardId",
																"lists"
															],
															"variable": [
																{
																	"key": "boardId"
																}
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"status\": 400,\n \"message\": \"One or more validation errors occurred.\",\n \"errors\": [\n  {\n   \"message\": \"Title is mandatory\",\n   \"property\": \"Title\"\n  }\n ]\n}"
												},
												{
													"name": "User not have permission to access the resource",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"description": {
																	"content": "Added as a part of security scheme: bearer",
																	"type": "text/plain"
																},
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/boards/:boardId/lists",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"boards",
																":boardId",
																"lists"
															],
															"variable": [
																{
																	"key": "boardId"
																}
															]
														}
													},
													"status": "Forbidden",
													"code": 403,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												}
											]
										},
										{
											"name": "Create a empty list with title of 150 characters",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "5af54fce-4fff-4b62-9094-dfd16e246458",
														"exec": [
															"pm.test(\"Response status is 201 when success\", () => {\r",
															"    pm.expect(pm.response.code).to.be.equals(201);\r",
															"    pm.expect(pm.response).to.have.header(\"Location\");\r",
															"});\r",
															"\r",
															"pm.test(\"Response status is 200 when fetch the Location header\", () => {\r",
															"    const location = pm.response.headers.get(\"Location\");\r",
															"    const bearerToken = pm.environment.get(\"bearerToken\");\r",
															"    pm.sendRequest({\r",
															"        url: location,\r",
															"        method: 'GET',\r",
															"        header: {\r",
															"            'Authorization': `Bearer ${bearerToken}`\r",
															"        },\r",
															"    }, (err, response) => {\r",
															"        pm.expect(response.code).to.be.equals(200);\r",
															"    });\r",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"title\": \"List Title with 150 Character spXJXWbBW9YlIOmbAtFkBXnzpVNkhuT3QnCCXbfB6CHRztkZDqCBHIXUJDp8w1119dckmcWLHnCbExEjyOzjoXIxCYiHqmjogxfFQR5y43aYWG7GgzyTNXP6\"\n}",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/boards/:boardId/lists",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"boards",
														":boardId",
														"lists"
													],
													"variable": [
														{
															"description": "(Required) Numeric id of the board",
															"key": "boardId",
															"type": "string",
															"value": "{{existentBoardId}}"
														}
													]
												}
											},
											"response": [
												{
													"name": "Access token is missing or invalid",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"description": {
																	"content": "Added as a part of security scheme: bearer",
																	"type": "text/plain"
																},
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/boards/:boardId/lists",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"boards",
																":boardId",
																"lists"
															],
															"variable": [
																{
																	"key": "boardId"
																}
															]
														}
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "www-authenticate",
															"value": "nulla et",
															"description": ""
														},
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"name": "Board not found",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"description": {
																	"content": "Added as a part of security scheme: bearer",
																	"type": "text/plain"
																},
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/boards/:boardId/lists",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"boards",
																":boardId",
																"lists"
															],
															"variable": [
																{
																	"key": "boardId"
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"status\": 404,\n \"message\": \"Board not found\"\n}"
												},
												{
													"name": "One or more validation errors occurred.",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"description": {
																	"content": "Added as a part of security scheme: bearer",
																	"type": "text/plain"
																},
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/boards/:boardId/lists",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"boards",
																":boardId",
																"lists"
															],
															"variable": [
																{
																	"key": "boardId"
																}
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"status\": 400,\n \"message\": \"One or more validation errors occurred.\",\n \"errors\": [\n  {\n   \"message\": \"Title is mandatory\",\n   \"property\": \"Title\"\n  }\n ]\n}"
												},
												{
													"name": "User not have permission to access the resource",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"description": {
																	"content": "Added as a part of security scheme: bearer",
																	"type": "text/plain"
																},
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/boards/:boardId/lists",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"boards",
																":boardId",
																"lists"
															],
															"variable": [
																{
																	"key": "boardId"
																}
															]
														}
													},
													"status": "Forbidden",
													"code": 403,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"name": "Created list object",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"description": {
																	"content": "Added as a part of security scheme: bearer",
																	"type": "text/plain"
																},
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/boards/:boardId/lists",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"boards",
																":boardId",
																"lists"
															],
															"variable": [
																{
																	"key": "boardId"
																}
															]
														}
													},
													"status": "Created",
													"code": 201,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Location",
															"value": "nulla et",
															"description": "URL where the resource can be accessed"
														},
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"id\": 28891984,\n \"title\": \"est voluptate ipsum eiusmod\",\n \"tasks\": [\n  \"min\",\n  \"dolore reprehenderit ex in\"\n ],\n \"createdOn\": \"anim\",\n \"modifiedOn\": \"dolor quis culpa\"\n}"
												}
											]
										},
										{
											"name": "Create a empty list with empty title",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "a8d3e7a1-2f01-45ad-8082-58334eb65da8",
														"exec": [
															"pm.test(\"Response status is 400 when title is empty\", () => {\r",
															"    pm.expect(pm.response.code).to.be.equals(400);\r",
															"});\r",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"title\": \"\"\n}",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/boards/:boardId/lists",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"boards",
														":boardId",
														"lists"
													],
													"variable": [
														{
															"key": "boardId",
															"value": "{{existentBoardId}}",
															"type": "string",
															"description": "(Required) Numeric id of the board"
														}
													]
												}
											},
											"response": [
												{
													"name": "User not have permission to access the resource",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"description": {
																	"content": "Added as a part of security scheme: bearer",
																	"type": "text/plain"
																},
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/boards/:boardId/lists",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"boards",
																":boardId",
																"lists"
															],
															"variable": [
																{
																	"key": "boardId"
																}
															]
														}
													},
													"status": "Forbidden",
													"code": 403,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"name": "Created list object",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"description": {
																	"content": "Added as a part of security scheme: bearer",
																	"type": "text/plain"
																},
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/boards/:boardId/lists",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"boards",
																":boardId",
																"lists"
															],
															"variable": [
																{
																	"key": "boardId"
																}
															]
														}
													},
													"status": "Created",
													"code": 201,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Location",
															"value": "nulla et",
															"description": "URL where the resource can be accessed"
														},
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"id\": 28891984,\n \"title\": \"est voluptate ipsum eiusmod\",\n \"tasks\": [\n  \"min\",\n  \"dolore reprehenderit ex in\"\n ],\n \"createdOn\": \"anim\",\n \"modifiedOn\": \"dolor quis culpa\"\n}"
												},
												{
													"name": "Access token is missing or invalid",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"description": {
																	"content": "Added as a part of security scheme: bearer",
																	"type": "text/plain"
																},
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/boards/:boardId/lists",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"boards",
																":boardId",
																"lists"
															],
															"variable": [
																{
																	"key": "boardId"
																}
															]
														}
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "www-authenticate",
															"value": "nulla et",
															"description": ""
														},
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"name": "Board not found",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"description": {
																	"content": "Added as a part of security scheme: bearer",
																	"type": "text/plain"
																},
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/boards/:boardId/lists",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"boards",
																":boardId",
																"lists"
															],
															"variable": [
																{
																	"key": "boardId"
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"status\": 404,\n \"message\": \"Board not found\"\n}"
												},
												{
													"name": "One or more validation errors occurred.",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"description": {
																	"content": "Added as a part of security scheme: bearer",
																	"type": "text/plain"
																},
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/boards/:boardId/lists",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"boards",
																":boardId",
																"lists"
															],
															"variable": [
																{
																	"key": "boardId"
																}
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"status\": 400,\n \"message\": \"One or more validation errors occurred.\",\n \"errors\": [\n  {\n   \"message\": \"Title is mandatory\",\n   \"property\": \"Title\"\n  }\n ]\n}"
												}
											]
										},
										{
											"name": "Create a empty list with title longer than 150 characters",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "66445a5d-508f-42b2-9884-02a0b26b07bd",
														"exec": [
															"pm.test(\"Response status is 400 when title is longer than 150 characters\", () => {\r",
															"    pm.expect(pm.response.code).to.be.equals(400);\r",
															"});\r",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"title\": \"List Title with more than 150 Character spXJXWbBW9YlIOmbAtFkBXnzpVNkhuT3QnCCXbfB6CHRztkZDqCBHIXUJDp8w1119dckmcWLHnCbExEjyOzjoXIxCYiHqmjogxfFQR5y43aYWG7GgzyTNXP6\"\n}",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/boards/:boardId/lists",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"boards",
														":boardId",
														"lists"
													],
													"variable": [
														{
															"description": "(Required) Numeric id of the board",
															"key": "boardId",
															"type": "string",
															"value": "{{existentBoardId}}"
														}
													]
												}
											},
											"response": [
												{
													"name": "One or more validation errors occurred.",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"description": {
																	"content": "Added as a part of security scheme: bearer",
																	"type": "text/plain"
																},
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/boards/:boardId/lists",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"boards",
																":boardId",
																"lists"
															],
															"variable": [
																{
																	"key": "boardId"
																}
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"status\": 400,\n \"message\": \"One or more validation errors occurred.\",\n \"errors\": [\n  {\n   \"message\": \"Title is mandatory\",\n   \"property\": \"Title\"\n  }\n ]\n}"
												},
												{
													"name": "User not have permission to access the resource",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"description": {
																	"content": "Added as a part of security scheme: bearer",
																	"type": "text/plain"
																},
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/boards/:boardId/lists",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"boards",
																":boardId",
																"lists"
															],
															"variable": [
																{
																	"key": "boardId"
																}
															]
														}
													},
													"status": "Forbidden",
													"code": 403,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"name": "Board not found",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"description": {
																	"content": "Added as a part of security scheme: bearer",
																	"type": "text/plain"
																},
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/boards/:boardId/lists",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"boards",
																":boardId",
																"lists"
															],
															"variable": [
																{
																	"key": "boardId"
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"status\": 404,\n \"message\": \"Board not found\"\n}"
												},
												{
													"name": "Access token is missing or invalid",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"description": {
																	"content": "Added as a part of security scheme: bearer",
																	"type": "text/plain"
																},
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/boards/:boardId/lists",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"boards",
																":boardId",
																"lists"
															],
															"variable": [
																{
																	"key": "boardId"
																}
															]
														}
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "www-authenticate",
															"value": "nulla et",
															"description": ""
														},
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"name": "Created list object",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"description": {
																	"content": "Added as a part of security scheme: bearer",
																	"type": "text/plain"
																},
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/boards/:boardId/lists",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"boards",
																":boardId",
																"lists"
															],
															"variable": [
																{
																	"key": "boardId"
																}
															]
														}
													},
													"status": "Created",
													"code": 201,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Location",
															"value": "nulla et",
															"description": "URL where the resource can be accessed"
														},
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"id\": 28891984,\n \"title\": \"est voluptate ipsum eiusmod\",\n \"tasks\": [\n  \"min\",\n  \"dolore reprehenderit ex in\"\n ],\n \"createdOn\": \"anim\",\n \"modifiedOn\": \"dolor quis culpa\"\n}"
												}
											]
										},
										{
											"name": "Create a empty list on a board that not exists",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "8efb7f60-fcf4-4a1f-b14c-57b842dadf49",
														"exec": [
															"pm.test(\"Response status is 404 when board not exists\", () => {\r",
															"    pm.expect(pm.response.code).to.be.equals(404);\r",
															"});\r",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"title\": \"My List\"\n}",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/boards/:boardId/lists",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"boards",
														":boardId",
														"lists"
													],
													"variable": [
														{
															"description": "(Required) Numeric id of the board",
															"key": "boardId",
															"type": "string",
															"value": "{{inexistentBoardId}}"
														}
													]
												}
											},
											"response": [
												{
													"name": "Access token is missing or invalid",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"description": {
																	"content": "Added as a part of security scheme: bearer",
																	"type": "text/plain"
																},
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/boards/:boardId/lists",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"boards",
																":boardId",
																"lists"
															],
															"variable": [
																{
																	"key": "boardId"
																}
															]
														}
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "www-authenticate",
															"value": "nulla et",
															"description": ""
														},
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"name": "Board not found",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"description": {
																	"content": "Added as a part of security scheme: bearer",
																	"type": "text/plain"
																},
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/boards/:boardId/lists",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"boards",
																":boardId",
																"lists"
															],
															"variable": [
																{
																	"key": "boardId"
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"status\": 404,\n \"message\": \"Board not found\"\n}"
												},
												{
													"name": "User not have permission to access the resource",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"description": {
																	"content": "Added as a part of security scheme: bearer",
																	"type": "text/plain"
																},
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/boards/:boardId/lists",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"boards",
																":boardId",
																"lists"
															],
															"variable": [
																{
																	"key": "boardId"
																}
															]
														}
													},
													"status": "Forbidden",
													"code": 403,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"name": "One or more validation errors occurred.",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"description": {
																	"content": "Added as a part of security scheme: bearer",
																	"type": "text/plain"
																},
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/boards/:boardId/lists",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"boards",
																":boardId",
																"lists"
															],
															"variable": [
																{
																	"key": "boardId"
																}
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"status\": 400,\n \"message\": \"One or more validation errors occurred.\",\n \"errors\": [\n  {\n   \"message\": \"Title is mandatory\",\n   \"property\": \"Title\"\n  }\n ]\n}"
												},
												{
													"name": "Created list object",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"description": {
																	"content": "Added as a part of security scheme: bearer",
																	"type": "text/plain"
																},
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/boards/:boardId/lists",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"boards",
																":boardId",
																"lists"
															],
															"variable": [
																{
																	"key": "boardId"
																}
															]
														}
													},
													"status": "Created",
													"code": 201,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Location",
															"value": "nulla et",
															"description": "URL where the resource can be accessed"
														},
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"id\": 28891984,\n \"title\": \"est voluptate ipsum eiusmod\",\n \"tasks\": [\n  \"min\",\n  \"dolore reprehenderit ex in\"\n ],\n \"createdOn\": \"anim\",\n \"modifiedOn\": \"dolor quis culpa\"\n}"
												}
											]
										},
										{
											"name": "Create a empty list as a user who is not member of the board",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "618b93ce-7ab0-48b2-8810-daff29dd383e",
														"exec": [
															"pm.test(\"Response status is 403 when send as user who is not member of the board\", () => {\r",
															"    pm.expect(pm.response.code).to.be.equals(403);\r",
															"});"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"id": "031b4712-0dda-4421-ab16-e82390ebf8e9",
														"exec": [
															"const baseUrl = pm.environment.get('baseUrl');\r",
															"function url(uri) {\r",
															"    return `${baseUrl}${uri}`;\r",
															"}\r",
															"\r",
															"const user = {\r",
															"    email: pm.environment.get('notMemberEmail'),\r",
															"    password: 'password'\r",
															"};\r",
															"\r",
															"pm.sendRequest({\r",
															"    url: url('/login'),\r",
															"    method: 'POST',\r",
															"    header: {\r",
															"        'Content-Type': 'application/json',\r",
															"    },\r",
															"    body: {\r",
															"        mode: 'raw',\r",
															"        raw: JSON.stringify(user)\r",
															"    }\r",
															"}, \r",
															"(err, response) => {\r",
															"    const { token } = response.json();\r",
															"    pm.environment.set(\"bearerToken\", token);\r",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"title\": \"My List\"\n}",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/boards/:boardId/lists",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"boards",
														":boardId",
														"lists"
													],
													"variable": [
														{
															"description": "(Required) Numeric id of the board",
															"key": "boardId",
															"type": "string",
															"value": "{{existentBoardId}}"
														}
													]
												}
											},
											"response": [
												{
													"name": "Board not found",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"description": {
																	"content": "Added as a part of security scheme: bearer",
																	"type": "text/plain"
																},
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/boards/:boardId/lists",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"boards",
																":boardId",
																"lists"
															],
															"variable": [
																{
																	"key": "boardId"
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"status\": 404,\n \"message\": \"Board not found\"\n}"
												},
												{
													"name": "One or more validation errors occurred.",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"description": {
																	"content": "Added as a part of security scheme: bearer",
																	"type": "text/plain"
																},
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/boards/:boardId/lists",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"boards",
																":boardId",
																"lists"
															],
															"variable": [
																{
																	"key": "boardId"
																}
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"status\": 400,\n \"message\": \"One or more validation errors occurred.\",\n \"errors\": [\n  {\n   \"message\": \"Title is mandatory\",\n   \"property\": \"Title\"\n  }\n ]\n}"
												},
												{
													"name": "User not have permission to access the resource",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"description": {
																	"content": "Added as a part of security scheme: bearer",
																	"type": "text/plain"
																},
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/boards/:boardId/lists",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"boards",
																":boardId",
																"lists"
															],
															"variable": [
																{
																	"key": "boardId"
																}
															]
														}
													},
													"status": "Forbidden",
													"code": 403,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"name": "Created list object",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"description": {
																	"content": "Added as a part of security scheme: bearer",
																	"type": "text/plain"
																},
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/boards/:boardId/lists",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"boards",
																":boardId",
																"lists"
															],
															"variable": [
																{
																	"key": "boardId"
																}
															]
														}
													},
													"status": "Created",
													"code": 201,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Location",
															"value": "nulla et",
															"description": "URL where the resource can be accessed"
														},
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"id\": 28891984,\n \"title\": \"est voluptate ipsum eiusmod\",\n \"tasks\": [\n  \"min\",\n  \"dolore reprehenderit ex in\"\n ],\n \"createdOn\": \"anim\",\n \"modifiedOn\": \"dolor quis culpa\"\n}"
												},
												{
													"name": "Access token is missing or invalid",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"description": {
																	"content": "Added as a part of security scheme: bearer",
																	"type": "text/plain"
																},
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/boards/:boardId/lists",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"boards",
																":boardId",
																"lists"
															],
															"variable": [
																{
																	"key": "boardId"
																}
															]
														}
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "www-authenticate",
															"value": "nulla et",
															"description": ""
														},
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												}
											]
										},
										{
											"name": "Create a empty list without authentication",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "45580eee-99dd-440c-8f83-48af5439f896",
														"exec": [
															"pm.test(\"Response status is 401 when not authenticated\", () => {\r",
															"    pm.expect(pm.response.code).to.be.equals(401);\r",
															"});\r",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "noauth"
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"title\": \"My List\"\n}",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/boards/:boardId/lists",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"boards",
														":boardId",
														"lists"
													],
													"variable": [
														{
															"description": "(Required) Numeric id of the board",
															"key": "boardId",
															"type": "string",
															"value": "{{existentBoardId}}"
														}
													]
												}
											},
											"response": [
												{
													"name": "One or more validation errors occurred.",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"description": {
																	"content": "Added as a part of security scheme: bearer",
																	"type": "text/plain"
																},
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/boards/:boardId/lists",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"boards",
																":boardId",
																"lists"
															],
															"variable": [
																{
																	"key": "boardId"
																}
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"status\": 400,\n \"message\": \"One or more validation errors occurred.\",\n \"errors\": [\n  {\n   \"message\": \"Title is mandatory\",\n   \"property\": \"Title\"\n  }\n ]\n}"
												},
												{
													"name": "User not have permission to access the resource",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"description": {
																	"content": "Added as a part of security scheme: bearer",
																	"type": "text/plain"
																},
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/boards/:boardId/lists",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"boards",
																":boardId",
																"lists"
															],
															"variable": [
																{
																	"key": "boardId"
																}
															]
														}
													},
													"status": "Forbidden",
													"code": 403,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"name": "Access token is missing or invalid",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"description": {
																	"content": "Added as a part of security scheme: bearer",
																	"type": "text/plain"
																},
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/boards/:boardId/lists",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"boards",
																":boardId",
																"lists"
															],
															"variable": [
																{
																	"key": "boardId"
																}
															]
														}
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "www-authenticate",
															"value": "nulla et",
															"description": ""
														},
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"name": "Created list object",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"description": {
																	"content": "Added as a part of security scheme: bearer",
																	"type": "text/plain"
																},
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/boards/:boardId/lists",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"boards",
																":boardId",
																"lists"
															],
															"variable": [
																{
																	"key": "boardId"
																}
															]
														}
													},
													"status": "Created",
													"code": 201,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Location",
															"value": "nulla et",
															"description": "URL where the resource can be accessed"
														},
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"id\": 28891984,\n \"title\": \"est voluptate ipsum eiusmod\",\n \"tasks\": [\n  \"min\",\n  \"dolore reprehenderit ex in\"\n ],\n \"createdOn\": \"anim\",\n \"modifiedOn\": \"dolor quis culpa\"\n}"
												},
												{
													"name": "Board not found",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"description": {
																	"content": "Added as a part of security scheme: bearer",
																	"type": "text/plain"
																},
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/boards/:boardId/lists",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"boards",
																":boardId",
																"lists"
															],
															"variable": [
																{
																	"key": "boardId"
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"status\": 404,\n \"message\": \"Board not found\"\n}"
												}
											]
										}
									],
									"protocolProfileBehavior": {},
									"_postman_isSubFolder": true
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						},
						{
							"name": "Tasks",
							"item": [
								{
									"name": "Create Task",
									"item": [
										{
											"name": "Create task",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "b81b63a0-bdd8-4742-9ffe-15fc981ca255",
														"exec": [
															"pm.test(\"Response status is 201 when success\", () => {\r",
															"    const task = pm.response.json();\r",
															"    pm.expect(pm.response.code).to.be.equals(201);\r",
															"    pm.expect(pm.response).to.have.header('Location');\r",
															"    pm.expect(task).to.have.property('list');\r",
															"    pm.expect(task.list).to.be.an('string');\r",
															"});\r",
															"\r",
															"pm.test(\"Response status is 200 when fetch the Location header\", () => {\r",
															"    const location = pm.response.headers.get('Location');\r",
															"    const bearerToken = pm.environment.get('bearerToken');\r",
															"    pm.sendRequest({\r",
															"        url: location,\r",
															"        method: 'GET',\r",
															"        header: {\r",
															"            'Authorization': `Bearer ${bearerToken}`\r",
															"        },\r",
															"    }, (err, response) => {\r",
															"        pm.expect(response.code).to.be.equals(200);\r",
															"    });\r",
															"});\r",
															"\r",
															"pm.test(\"Response status is 200 when fetch the value on list property\", () => {\r",
															"    const { list } = pm.response.json();\r",
															"    const bearerToken = pm.environment.get('bearerToken');\r",
															"    pm.sendRequest({\r",
															"        url: list,\r",
															"        method: 'GET',\r",
															"        header: {\r",
															"            'Authorization': `Bearer ${bearerToken}`\r",
															"        },\r",
															"    }, (err, response) => {\r",
															"        pm.expect(response.code).to.be.equals(200);\r",
															"    });\r",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"summary\": \"My Task\",\n  \"description\": \"Task description\",\n  \"tagColor\": \"9932cc\",\n  \"assignedTo\": [],\n  \"list\": {{existentListId}}\n}",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/boards/:boardId/tasks",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"boards",
														":boardId",
														"tasks"
													],
													"variable": [
														{
															"description": "(Required) Numeric id of the board",
															"key": "boardId",
															"type": "string",
															"value": "{{existentBoardId}}"
														}
													]
												}
											},
											"response": [
												{
													"name": "Created Task object",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"description": {
																	"content": "Added as a part of security scheme: bearer",
																	"type": "text/plain"
																},
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/boards/:boardId/tasks",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"boards",
																":boardId",
																"tasks"
															],
															"variable": [
																{
																	"key": "boardId"
																}
															]
														}
													},
													"status": "Created",
													"code": 201,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Location",
															"value": "nulla et",
															"description": "URL where the resource can be accessed"
														},
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"id\": -80125566,\n \"summary\": \"aliq\",\n \"description\": \"aute sed in laboris dolor\",\n \"tagColor\": \"cupidatat ut cillum\",\n \"assignedTo\": [\n  \"velit culpa nostrud officia\",\n  \"in dolor culpa in\"\n ],\n \"list\": \"Ut laboris\"\n}"
												},
												{
													"name": "User not have permission to access the resource",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"description": {
																	"content": "Added as a part of security scheme: bearer",
																	"type": "text/plain"
																},
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/boards/:boardId/tasks",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"boards",
																":boardId",
																"tasks"
															],
															"variable": [
																{
																	"key": "boardId"
																}
															]
														}
													},
													"status": "Forbidden",
													"code": 403,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"name": "One or more validation errors occurred.",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"description": {
																	"content": "Added as a part of security scheme: bearer",
																	"type": "text/plain"
																},
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/boards/:boardId/tasks",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"boards",
																":boardId",
																"tasks"
															],
															"variable": [
																{
																	"key": "boardId"
																}
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"status\": 400,\n \"message\": \"One or more validation errors occurred.\",\n \"errors\": [\n  {\n   \"message\": \"Summary is mandatory\",\n   \"property\": \"Summary\"\n  },\n  {\n   \"message\": \"Tag color is mandatory\",\n   \"property\": \"TagColor\"\n  },\n  {\n   \"message\": \"TagColor must be a hexadecimal color value\",\n   \"property\": \"TagColor\"\n  }\n ]\n}"
												},
												{
													"name": "Access token is missing or invalid",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"description": {
																	"content": "Added as a part of security scheme: bearer",
																	"type": "text/plain"
																},
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/boards/:boardId/tasks",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"boards",
																":boardId",
																"tasks"
															],
															"variable": [
																{
																	"key": "boardId"
																}
															]
														}
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "www-authenticate",
															"value": "nulla et",
															"description": ""
														},
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"name": "Board or task not found",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"description": {
																	"content": "Added as a part of security scheme: bearer",
																	"type": "text/plain"
																},
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/boards/:boardId/tasks",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"boards",
																":boardId",
																"tasks"
															],
															"variable": [
																{
																	"key": "boardId"
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"status\": 404,\n \"message\": \"Task not found\"\n}"
												}
											]
										},
										{
											"name": "Create task with assignment",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "809ffae4-00cc-4fc7-b4db-dd349b7f175c",
														"exec": [
															"const task = pm.response.json();\r",
															"const bearerToken = pm.environment.get('bearerToken');\r",
															"\r",
															"pm.test(\"Response status is 201 when success\", () => {\r",
															"    pm.expect(pm.response.code).to.be.equals(201);\r",
															"    pm.expect(pm.response).to.have.header('Location');\r",
															"    pm.expect(task).to.have.property('list');\r",
															"    pm.expect(task.list).to.be.an('string');\r",
															"});\r",
															"\r",
															"pm.test(\"assignedTo property should have count of 1\", () => {\r",
															"    pm.expect(task).to.have.property('assignedTo');\r",
															"    pm.expect(task.assignedTo).to.be.an('array');\r",
															"    pm.expect(task.assignedTo).to.have.lengthOf(1);\r",
															"});\r",
															"\r",
															"pm.test(\"Response status is 200 when fetch the value on assignedTo\", () => {\r",
															"    const [memberAssigned] = task.assignedTo;\r",
															"    pm.sendRequest({\r",
															"        url: memberAssigned,\r",
															"        method: 'GET',\r",
															"        header: {\r",
															"            'Authorization': `Bearer ${bearerToken}`\r",
															"        },\r",
															"    }, (err, response) => {\r",
															"        pm.expect(response.code).to.be.equals(200);\r",
															"    });\r",
															"});\r",
															"\r",
															"pm.test(\"Response status is 200 when fetch the Location header\", () => {\r",
															"    const location = pm.response.headers.get('Location');\r",
															"    pm.sendRequest({\r",
															"        url: location,\r",
															"        method: 'GET',\r",
															"        header: {\r",
															"            'Authorization': `Bearer ${bearerToken}`\r",
															"        },\r",
															"    }, (err, response) => {\r",
															"        pm.expect(response.code).to.be.equals(200);\r",
															"    });\r",
															"});\r",
															"\r",
															"pm.test(\"Response status is 200 when fetch the value on list property\", () => {\r",
															"    const { list } = task;\r",
															"    pm.sendRequest({\r",
															"        url: list,\r",
															"        method: 'GET',\r",
															"        header: {\r",
															"            'Authorization': `Bearer ${bearerToken}`\r",
															"        },\r",
															"    }, (err, response) => {\r",
															"        pm.expect(response.code).to.be.equals(200);\r",
															"    });\r",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"summary\": \"My Task\",\n  \"description\": \"Task description\",\n  \"tagColor\": \"9932cc\",\n  \"assignedTo\": [ {{memberId}} ],\n  \"list\": {{existentListId}}\n}",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/boards/:boardId/tasks",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"boards",
														":boardId",
														"tasks"
													],
													"variable": [
														{
															"description": "(Required) Numeric id of the board",
															"key": "boardId",
															"type": "string",
															"value": "{{existentBoardId}}"
														}
													]
												}
											},
											"response": [
												{
													"name": "Access token is missing or invalid",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"description": {
																	"content": "Added as a part of security scheme: bearer",
																	"type": "text/plain"
																},
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/boards/:boardId/tasks",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"boards",
																":boardId",
																"tasks"
															],
															"variable": [
																{
																	"key": "boardId"
																}
															]
														}
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "www-authenticate",
															"value": "nulla et",
															"description": ""
														},
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"name": "Board or task not found",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"description": {
																	"content": "Added as a part of security scheme: bearer",
																	"type": "text/plain"
																},
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/boards/:boardId/tasks",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"boards",
																":boardId",
																"tasks"
															],
															"variable": [
																{
																	"key": "boardId"
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"status\": 404,\n \"message\": \"Task not found\"\n}"
												},
												{
													"name": "Created Task object",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"description": {
																	"content": "Added as a part of security scheme: bearer",
																	"type": "text/plain"
																},
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/boards/:boardId/tasks",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"boards",
																":boardId",
																"tasks"
															],
															"variable": [
																{
																	"key": "boardId"
																}
															]
														}
													},
													"status": "Created",
													"code": 201,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Location",
															"value": "nulla et",
															"description": "URL where the resource can be accessed"
														},
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"id\": -80125566,\n \"summary\": \"aliq\",\n \"description\": \"aute sed in laboris dolor\",\n \"tagColor\": \"cupidatat ut cillum\",\n \"assignedTo\": [\n  \"velit culpa nostrud officia\",\n  \"in dolor culpa in\"\n ],\n \"list\": \"Ut laboris\"\n}"
												},
												{
													"name": "One or more validation errors occurred.",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"description": {
																	"content": "Added as a part of security scheme: bearer",
																	"type": "text/plain"
																},
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/boards/:boardId/tasks",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"boards",
																":boardId",
																"tasks"
															],
															"variable": [
																{
																	"key": "boardId"
																}
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"status\": 400,\n \"message\": \"One or more validation errors occurred.\",\n \"errors\": [\n  {\n   \"message\": \"Summary is mandatory\",\n   \"property\": \"Summary\"\n  },\n  {\n   \"message\": \"Tag color is mandatory\",\n   \"property\": \"TagColor\"\n  },\n  {\n   \"message\": \"TagColor must be a hexadecimal color value\",\n   \"property\": \"TagColor\"\n  }\n ]\n}"
												},
												{
													"name": "User not have permission to access the resource",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"description": {
																	"content": "Added as a part of security scheme: bearer",
																	"type": "text/plain"
																},
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/boards/:boardId/tasks",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"boards",
																":boardId",
																"tasks"
															],
															"variable": [
																{
																	"key": "boardId"
																}
															]
														}
													},
													"status": "Forbidden",
													"code": 403,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												}
											]
										},
										{
											"name": "Create task with invalid tag",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "cd5bfbfb-c8c3-4a09-802a-f60d37fa5d46",
														"exec": [
															"pm.test(\"Response status is 400 when tag is invalid\", () => { \r",
															"    pm.expect(pm.response.code).to.be.equals(400);\r",
															"});\r",
															"\r",
															"pm.test(\"Response should have error indicator\", () => {\r",
															"    const task = pm.response.json();\r",
															"    pm.expect(task).to.haveOwnProperty('errors');\r",
															"    pm.expect(task.errors).to.be.an('array');\r",
															"    pm.expect(task.errors.length).to.have.least(1);\r",
															"});\r",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"summary\": \"My Task\",\n  \"description\": \"Task description\",\n  \"tagColor\": \"#9932cc\",\n  \"assignedTo\": [],\n  \"list\": {{existentListId}}\n}",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/boards/:boardId/tasks",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"boards",
														":boardId",
														"tasks"
													],
													"variable": [
														{
															"description": "(Required) Numeric id of the board",
															"key": "boardId",
															"type": "string",
															"value": "{{existentBoardId}}"
														}
													]
												}
											},
											"response": [
												{
													"name": "Created Task object",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"description": {
																	"content": "Added as a part of security scheme: bearer",
																	"type": "text/plain"
																},
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/boards/:boardId/tasks",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"boards",
																":boardId",
																"tasks"
															],
															"variable": [
																{
																	"key": "boardId"
																}
															]
														}
													},
													"status": "Created",
													"code": 201,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Location",
															"value": "nulla et",
															"description": "URL where the resource can be accessed"
														},
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"id\": -80125566,\n \"summary\": \"aliq\",\n \"description\": \"aute sed in laboris dolor\",\n \"tagColor\": \"cupidatat ut cillum\",\n \"assignedTo\": [\n  \"velit culpa nostrud officia\",\n  \"in dolor culpa in\"\n ],\n \"list\": \"Ut laboris\"\n}"
												},
												{
													"name": "User not have permission to access the resource",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"description": {
																	"content": "Added as a part of security scheme: bearer",
																	"type": "text/plain"
																},
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/boards/:boardId/tasks",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"boards",
																":boardId",
																"tasks"
															],
															"variable": [
																{
																	"key": "boardId"
																}
															]
														}
													},
													"status": "Forbidden",
													"code": 403,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"name": "One or more validation errors occurred.",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"description": {
																	"content": "Added as a part of security scheme: bearer",
																	"type": "text/plain"
																},
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/boards/:boardId/tasks",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"boards",
																":boardId",
																"tasks"
															],
															"variable": [
																{
																	"key": "boardId"
																}
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"status\": 400,\n \"message\": \"One or more validation errors occurred.\",\n \"errors\": [\n  {\n   \"message\": \"Summary is mandatory\",\n   \"property\": \"Summary\"\n  },\n  {\n   \"message\": \"Tag color is mandatory\",\n   \"property\": \"TagColor\"\n  },\n  {\n   \"message\": \"TagColor must be a hexadecimal color value\",\n   \"property\": \"TagColor\"\n  }\n ]\n}"
												},
												{
													"name": "Access token is missing or invalid",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"description": {
																	"content": "Added as a part of security scheme: bearer",
																	"type": "text/plain"
																},
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/boards/:boardId/tasks",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"boards",
																":boardId",
																"tasks"
															],
															"variable": [
																{
																	"key": "boardId"
																}
															]
														}
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "www-authenticate",
															"value": "nulla et",
															"description": ""
														},
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"name": "Board or task not found",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"description": {
																	"content": "Added as a part of security scheme: bearer",
																	"type": "text/plain"
																},
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/boards/:boardId/tasks",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"boards",
																":boardId",
																"tasks"
															],
															"variable": [
																{
																	"key": "boardId"
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"status\": 404,\n \"message\": \"Task not found\"\n}"
												}
											]
										},
										{
											"name": "Create task when board not exists",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "90980873-a2b2-4264-8e01-84b3b5a0948b",
														"exec": [
															"pm.test(\"Response status is 404 when board not exists\", () => {\r",
															"    pm.expect(pm.response.code).to.be.equals(404);\r",
															"});\r",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"summary\": \"My Task\",\n  \"description\": \"Task description\",\n  \"tagColor\": \"9932cc\",\n  \"assignedTo\": [],\n  \"list\": {{existentListId}}\n}",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/boards/:boardId/tasks",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"boards",
														":boardId",
														"tasks"
													],
													"variable": [
														{
															"description": "(Required) Numeric id of the board",
															"key": "boardId",
															"type": "string",
															"value": "{{inexistentBoardId}}"
														}
													]
												}
											},
											"response": [
												{
													"name": "Created Task object",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"description": {
																	"content": "Added as a part of security scheme: bearer",
																	"type": "text/plain"
																},
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/boards/:boardId/tasks",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"boards",
																":boardId",
																"tasks"
															],
															"variable": [
																{
																	"key": "boardId"
																}
															]
														}
													},
													"status": "Created",
													"code": 201,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Location",
															"value": "nulla et",
															"description": "URL where the resource can be accessed"
														},
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"id\": -80125566,\n \"summary\": \"aliq\",\n \"description\": \"aute sed in laboris dolor\",\n \"tagColor\": \"cupidatat ut cillum\",\n \"assignedTo\": [\n  \"velit culpa nostrud officia\",\n  \"in dolor culpa in\"\n ],\n \"list\": \"Ut laboris\"\n}"
												},
												{
													"name": "One or more validation errors occurred.",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"description": {
																	"content": "Added as a part of security scheme: bearer",
																	"type": "text/plain"
																},
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/boards/:boardId/tasks",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"boards",
																":boardId",
																"tasks"
															],
															"variable": [
																{
																	"key": "boardId"
																}
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"status\": 400,\n \"message\": \"One or more validation errors occurred.\",\n \"errors\": [\n  {\n   \"message\": \"Summary is mandatory\",\n   \"property\": \"Summary\"\n  },\n  {\n   \"message\": \"Tag color is mandatory\",\n   \"property\": \"TagColor\"\n  },\n  {\n   \"message\": \"TagColor must be a hexadecimal color value\",\n   \"property\": \"TagColor\"\n  }\n ]\n}"
												},
												{
													"name": "User not have permission to access the resource",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"description": {
																	"content": "Added as a part of security scheme: bearer",
																	"type": "text/plain"
																},
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/boards/:boardId/tasks",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"boards",
																":boardId",
																"tasks"
															],
															"variable": [
																{
																	"key": "boardId"
																}
															]
														}
													},
													"status": "Forbidden",
													"code": 403,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"name": "Access token is missing or invalid",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"description": {
																	"content": "Added as a part of security scheme: bearer",
																	"type": "text/plain"
																},
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/boards/:boardId/tasks",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"boards",
																":boardId",
																"tasks"
															],
															"variable": [
																{
																	"key": "boardId"
																}
															]
														}
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "www-authenticate",
															"value": "nulla et",
															"description": ""
														},
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"name": "Board or task not found",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"description": {
																	"content": "Added as a part of security scheme: bearer",
																	"type": "text/plain"
																},
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/boards/:boardId/tasks",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"boards",
																":boardId",
																"tasks"
															],
															"variable": [
																{
																	"key": "boardId"
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"status\": 404,\n \"message\": \"Task not found\"\n}"
												}
											]
										},
										{
											"name": "Create task when list not exists",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "bac1b207-db31-4d94-b75f-a0ccf5728364",
														"exec": [
															"pm.test(\"Response status is 404 when list not exists\", () => {\r",
															"    pm.expect(pm.response.code).to.be.equals(404);\r",
															"});\r",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"summary\": \"My Task\",\n  \"description\": \"Task description\",\n  \"tagColor\": \"9932cc\",\n  \"assignedTo\": [],\n  \"list\": {{inexistentListId}}\n}",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/boards/:boardId/tasks",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"boards",
														":boardId",
														"tasks"
													],
													"variable": [
														{
															"description": "(Required) Numeric id of the board",
															"key": "boardId",
															"type": "string",
															"value": "{{existentBoardId}}"
														}
													]
												}
											},
											"response": [
												{
													"name": "Created Task object",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"description": {
																	"content": "Added as a part of security scheme: bearer",
																	"type": "text/plain"
																},
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/boards/:boardId/tasks",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"boards",
																":boardId",
																"tasks"
															],
															"variable": [
																{
																	"key": "boardId"
																}
															]
														}
													},
													"status": "Created",
													"code": 201,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Location",
															"value": "nulla et",
															"description": "URL where the resource can be accessed"
														},
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"id\": -80125566,\n \"summary\": \"aliq\",\n \"description\": \"aute sed in laboris dolor\",\n \"tagColor\": \"cupidatat ut cillum\",\n \"assignedTo\": [\n  \"velit culpa nostrud officia\",\n  \"in dolor culpa in\"\n ],\n \"list\": \"Ut laboris\"\n}"
												},
												{
													"name": "Access token is missing or invalid",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"description": {
																	"content": "Added as a part of security scheme: bearer",
																	"type": "text/plain"
																},
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/boards/:boardId/tasks",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"boards",
																":boardId",
																"tasks"
															],
															"variable": [
																{
																	"key": "boardId"
																}
															]
														}
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "www-authenticate",
															"value": "nulla et",
															"description": ""
														},
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"name": "User not have permission to access the resource",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"description": {
																	"content": "Added as a part of security scheme: bearer",
																	"type": "text/plain"
																},
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/boards/:boardId/tasks",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"boards",
																":boardId",
																"tasks"
															],
															"variable": [
																{
																	"key": "boardId"
																}
															]
														}
													},
													"status": "Forbidden",
													"code": 403,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"name": "One or more validation errors occurred.",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"description": {
																	"content": "Added as a part of security scheme: bearer",
																	"type": "text/plain"
																},
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/boards/:boardId/tasks",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"boards",
																":boardId",
																"tasks"
															],
															"variable": [
																{
																	"key": "boardId"
																}
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"status\": 400,\n \"message\": \"One or more validation errors occurred.\",\n \"errors\": [\n  {\n   \"message\": \"Summary is mandatory\",\n   \"property\": \"Summary\"\n  },\n  {\n   \"message\": \"Tag color is mandatory\",\n   \"property\": \"TagColor\"\n  },\n  {\n   \"message\": \"TagColor must be a hexadecimal color value\",\n   \"property\": \"TagColor\"\n  }\n ]\n}"
												},
												{
													"name": "Board or task not found",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"description": {
																	"content": "Added as a part of security scheme: bearer",
																	"type": "text/plain"
																},
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/boards/:boardId/tasks",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"boards",
																":boardId",
																"tasks"
															],
															"variable": [
																{
																	"key": "boardId"
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"status\": 404,\n \"message\": \"Task not found\"\n}"
												}
											]
										},
										{
											"name": "Create task when not authenticated",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "f7e725dd-5c31-49ec-8835-b5e6564f5b16",
														"exec": [
															"pm.test(\"Response status is 401 when not authenticated\", () => {\r",
															"    pm.expect(pm.response.code).to.be.equals(401);\r",
															"});\r",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "noauth"
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"summary\": \"My Task\",\n  \"description\": \"Task description\",\n  \"tagColor\": \"9932cc\",\n  \"assignedTo\": [],\n  \"list\": {{existentListId}}\n}",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/boards/:boardId/tasks",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"boards",
														":boardId",
														"tasks"
													],
													"variable": [
														{
															"description": "(Required) Numeric id of the board",
															"key": "boardId",
															"type": "string",
															"value": "{{existentBoardId}}"
														}
													]
												}
											},
											"response": [
												{
													"name": "Created Task object",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"description": {
																	"content": "Added as a part of security scheme: bearer",
																	"type": "text/plain"
																},
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/boards/:boardId/tasks",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"boards",
																":boardId",
																"tasks"
															],
															"variable": [
																{
																	"key": "boardId"
																}
															]
														}
													},
													"status": "Created",
													"code": 201,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Location",
															"value": "nulla et",
															"description": "URL where the resource can be accessed"
														},
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"id\": -80125566,\n \"summary\": \"aliq\",\n \"description\": \"aute sed in laboris dolor\",\n \"tagColor\": \"cupidatat ut cillum\",\n \"assignedTo\": [\n  \"velit culpa nostrud officia\",\n  \"in dolor culpa in\"\n ],\n \"list\": \"Ut laboris\"\n}"
												},
												{
													"name": "Board or task not found",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"description": {
																	"content": "Added as a part of security scheme: bearer",
																	"type": "text/plain"
																},
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/boards/:boardId/tasks",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"boards",
																":boardId",
																"tasks"
															],
															"variable": [
																{
																	"key": "boardId"
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"status\": 404,\n \"message\": \"Task not found\"\n}"
												},
												{
													"name": "Access token is missing or invalid",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"description": {
																	"content": "Added as a part of security scheme: bearer",
																	"type": "text/plain"
																},
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/boards/:boardId/tasks",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"boards",
																":boardId",
																"tasks"
															],
															"variable": [
																{
																	"key": "boardId"
																}
															]
														}
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "www-authenticate",
															"value": "nulla et",
															"description": ""
														},
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"name": "One or more validation errors occurred.",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"description": {
																	"content": "Added as a part of security scheme: bearer",
																	"type": "text/plain"
																},
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/boards/:boardId/tasks",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"boards",
																":boardId",
																"tasks"
															],
															"variable": [
																{
																	"key": "boardId"
																}
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"status\": 400,\n \"message\": \"One or more validation errors occurred.\",\n \"errors\": [\n  {\n   \"message\": \"Summary is mandatory\",\n   \"property\": \"Summary\"\n  },\n  {\n   \"message\": \"Tag color is mandatory\",\n   \"property\": \"TagColor\"\n  },\n  {\n   \"message\": \"TagColor must be a hexadecimal color value\",\n   \"property\": \"TagColor\"\n  }\n ]\n}"
												},
												{
													"name": "User not have permission to access the resource",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"description": {
																	"content": "Added as a part of security scheme: bearer",
																	"type": "text/plain"
																},
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/boards/:boardId/tasks",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"boards",
																":boardId",
																"tasks"
															],
															"variable": [
																{
																	"key": "boardId"
																}
															]
														}
													},
													"status": "Forbidden",
													"code": 403,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												}
											]
										}
									],
									"protocolProfileBehavior": {},
									"_postman_isSubFolder": true
								},
								{
									"name": "{taskId}",
									"item": [
										{
											"name": "Assignments",
											"item": [
												{
													"name": "Add Assignemnt",
													"item": [
														{
															"name": "Assign a task",
															"event": [
																{
																	"listen": "test",
																	"script": {
																		"id": "79750193-fb4a-417d-ac82-c8e3b9b9af9a",
																		"exec": [
																			"pm.test(\"Response status is 204 when success\", () => {\r",
																			"    pm.expect(pm.response.code).to.be.equals(204);\r",
																			"});"
																		],
																		"type": "text/javascript"
																	}
																}
															],
															"request": {
																"method": "PUT",
																"header": [],
																"url": {
																	"raw": "{{baseUrl}}/boards/:boardId/tasks/:taskId/assignments/:userId",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"boards",
																		":boardId",
																		"tasks",
																		":taskId",
																		"assignments",
																		":userId"
																	],
																	"variable": [
																		{
																			"key": "boardId",
																			"value": "{{existentBoardId}}",
																			"type": "string",
																			"description": "(Required) Numeric id of the board"
																		},
																		{
																			"key": "taskId",
																			"value": "{{existentTaskId}}",
																			"type": "string",
																			"description": "(Required) Numeric id of the task"
																		},
																		{
																			"key": "userId",
																			"value": "{{memberId}}",
																			"type": "string",
																			"description": "(Required) Numeric id of the user"
																		}
																	]
																}
															},
															"response": [
																{
																	"name": "Access token is missing or invalid",
																	"originalRequest": {
																		"method": "PUT",
																		"header": [
																			{
																				"description": {
																					"content": "Added as a part of security scheme: bearer",
																					"type": "text/plain"
																				},
																				"key": "Authorization",
																				"value": "Bearer <token>"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/boards/:boardId/tasks/:taskId/assignments/:userId",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"boards",
																				":boardId",
																				"tasks",
																				":taskId",
																				"assignments",
																				":userId"
																			],
																			"variable": [
																				{
																					"key": "boardId"
																				},
																				{
																					"key": "taskId"
																				},
																				{
																					"key": "userId"
																				}
																			]
																		}
																	},
																	"status": "Unauthorized",
																	"code": 401,
																	"_postman_previewlanguage": "text",
																	"header": [
																		{
																			"key": "www-authenticate",
																			"value": "nulla et",
																			"description": ""
																		},
																		{
																			"key": "Content-Type",
																			"value": "text/plain"
																		}
																	],
																	"cookie": [],
																	"body": ""
																},
																{
																	"name": "Assignment was added",
																	"originalRequest": {
																		"method": "PUT",
																		"header": [
																			{
																				"description": {
																					"content": "Added as a part of security scheme: bearer",
																					"type": "text/plain"
																				},
																				"key": "Authorization",
																				"value": "Bearer <token>"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/boards/:boardId/tasks/:taskId/assignments/:userId",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"boards",
																				":boardId",
																				"tasks",
																				":taskId",
																				"assignments",
																				":userId"
																			],
																			"variable": [
																				{
																					"key": "boardId"
																				},
																				{
																					"key": "taskId"
																				},
																				{
																					"key": "userId"
																				}
																			]
																		}
																	},
																	"status": "No Content",
																	"code": 204,
																	"_postman_previewlanguage": "text",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "text/plain"
																		}
																	],
																	"cookie": [],
																	"body": ""
																},
																{
																	"name": "Board, Task or User not found",
																	"originalRequest": {
																		"method": "PUT",
																		"header": [
																			{
																				"description": {
																					"content": "Added as a part of security scheme: bearer",
																					"type": "text/plain"
																				},
																				"key": "Authorization",
																				"value": "Bearer <token>"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/boards/:boardId/tasks/:taskId/assignments/:userId",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"boards",
																				":boardId",
																				"tasks",
																				":taskId",
																				"assignments",
																				":userId"
																			],
																			"variable": [
																				{
																					"key": "boardId"
																				},
																				{
																					"key": "taskId"
																				},
																				{
																					"key": "userId"
																				}
																			]
																		}
																	},
																	"status": "Not Found",
																	"code": 404,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n \"status\": 404,\n \"message\": \"User not found\"\n}"
																},
																{
																	"name": "User not have permission to access the resource",
																	"originalRequest": {
																		"method": "PUT",
																		"header": [
																			{
																				"description": {
																					"content": "Added as a part of security scheme: bearer",
																					"type": "text/plain"
																				},
																				"key": "Authorization",
																				"value": "Bearer <token>"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/boards/:boardId/tasks/:taskId/assignments/:userId",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"boards",
																				":boardId",
																				"tasks",
																				":taskId",
																				"assignments",
																				":userId"
																			],
																			"variable": [
																				{
																					"key": "boardId"
																				},
																				{
																					"key": "taskId"
																				},
																				{
																					"key": "userId"
																				}
																			]
																		}
																	},
																	"status": "Forbidden",
																	"code": 403,
																	"_postman_previewlanguage": "text",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "text/plain"
																		}
																	],
																	"cookie": [],
																	"body": ""
																}
															]
														},
														{
															"name": "Assign a task to a member who is already assigned",
															"event": [
																{
																	"listen": "test",
																	"script": {
																		"id": "4bcd7133-7ba4-404e-aa37-53421647db49",
																		"exec": [
																			"pm.test(\"Response status is 204 when success\", () => {\r",
																			"    pm.expect(pm.response.code).to.be.equals(204);\r",
																			"});"
																		],
																		"type": "text/javascript"
																	}
																},
																{
																	"listen": "prerequest",
																	"script": {
																		"id": "78db1f83-ed2f-4d8b-8e7f-c1a0335514dd",
																		"exec": [
																			"const baseUrl = pm.environment.get('baseUrl');\r",
																			"const bearerToken = pm.environment.get('bearerToken');\r",
																			"const boardId = pm.environment.get('existentBoardId');\r",
																			"const taskId = pm.environment.get('existentTaskId');\r",
																			"const memberIdToAssign = pm.environment.get('adminMemberId');\r",
																			"function url(uri) {\r",
																			"    return `${baseUrl}${uri}`;\r",
																			"}\r",
																			"\r",
																			"pm.sendRequest({\r",
																			"    url: url(`/boards/${boardId}/tasks/${taskId}/assignments/${memberIdToAssign}`),\r",
																			"    method: 'PUT',\r",
																			"    header: {\r",
																			"        'Content-Type': 'application/json',\r",
																			"        'Authorization': `Bearer ${bearerToken}`\r",
																			"    },\r",
																			"});\r",
																			""
																		],
																		"type": "text/javascript"
																	}
																}
															],
															"request": {
																"method": "PUT",
																"header": [],
																"url": {
																	"raw": "{{baseUrl}}/boards/:boardId/tasks/:taskId/assignments/:userId",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"boards",
																		":boardId",
																		"tasks",
																		":taskId",
																		"assignments",
																		":userId"
																	],
																	"variable": [
																		{
																			"description": "(Required) Numeric id of the board",
																			"key": "boardId",
																			"type": "string",
																			"value": "{{existentBoardId}}"
																		},
																		{
																			"description": "(Required) Numeric id of the task",
																			"key": "taskId",
																			"type": "string",
																			"value": "{{existentTaskId}}"
																		},
																		{
																			"description": "(Required) Numeric id of the user",
																			"key": "userId",
																			"type": "string",
																			"value": "{{adminMemberId}}"
																		}
																	]
																}
															},
															"response": [
																{
																	"name": "Assignment was added",
																	"originalRequest": {
																		"method": "PUT",
																		"header": [
																			{
																				"description": {
																					"content": "Added as a part of security scheme: bearer",
																					"type": "text/plain"
																				},
																				"key": "Authorization",
																				"value": "Bearer <token>"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/boards/:boardId/tasks/:taskId/assignments/:userId",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"boards",
																				":boardId",
																				"tasks",
																				":taskId",
																				"assignments",
																				":userId"
																			],
																			"variable": [
																				{
																					"key": "boardId"
																				},
																				{
																					"key": "taskId"
																				},
																				{
																					"key": "userId"
																				}
																			]
																		}
																	},
																	"status": "No Content",
																	"code": 204,
																	"_postman_previewlanguage": "text",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "text/plain"
																		}
																	],
																	"cookie": [],
																	"body": ""
																},
																{
																	"name": "Board, Task or User not found",
																	"originalRequest": {
																		"method": "PUT",
																		"header": [
																			{
																				"description": {
																					"content": "Added as a part of security scheme: bearer",
																					"type": "text/plain"
																				},
																				"key": "Authorization",
																				"value": "Bearer <token>"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/boards/:boardId/tasks/:taskId/assignments/:userId",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"boards",
																				":boardId",
																				"tasks",
																				":taskId",
																				"assignments",
																				":userId"
																			],
																			"variable": [
																				{
																					"key": "boardId"
																				},
																				{
																					"key": "taskId"
																				},
																				{
																					"key": "userId"
																				}
																			]
																		}
																	},
																	"status": "Not Found",
																	"code": 404,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n \"status\": 404,\n \"message\": \"User not found\"\n}"
																},
																{
																	"name": "Access token is missing or invalid",
																	"originalRequest": {
																		"method": "PUT",
																		"header": [
																			{
																				"description": {
																					"content": "Added as a part of security scheme: bearer",
																					"type": "text/plain"
																				},
																				"key": "Authorization",
																				"value": "Bearer <token>"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/boards/:boardId/tasks/:taskId/assignments/:userId",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"boards",
																				":boardId",
																				"tasks",
																				":taskId",
																				"assignments",
																				":userId"
																			],
																			"variable": [
																				{
																					"key": "boardId"
																				},
																				{
																					"key": "taskId"
																				},
																				{
																					"key": "userId"
																				}
																			]
																		}
																	},
																	"status": "Unauthorized",
																	"code": 401,
																	"_postman_previewlanguage": "text",
																	"header": [
																		{
																			"key": "www-authenticate",
																			"value": "nulla et",
																			"description": ""
																		},
																		{
																			"key": "Content-Type",
																			"value": "text/plain"
																		}
																	],
																	"cookie": [],
																	"body": ""
																},
																{
																	"name": "User not have permission to access the resource",
																	"originalRequest": {
																		"method": "PUT",
																		"header": [
																			{
																				"description": {
																					"content": "Added as a part of security scheme: bearer",
																					"type": "text/plain"
																				},
																				"key": "Authorization",
																				"value": "Bearer <token>"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/boards/:boardId/tasks/:taskId/assignments/:userId",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"boards",
																				":boardId",
																				"tasks",
																				":taskId",
																				"assignments",
																				":userId"
																			],
																			"variable": [
																				{
																					"key": "boardId"
																				},
																				{
																					"key": "taskId"
																				},
																				{
																					"key": "userId"
																				}
																			]
																		}
																	},
																	"status": "Forbidden",
																	"code": 403,
																	"_postman_previewlanguage": "text",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "text/plain"
																		}
																	],
																	"cookie": [],
																	"body": ""
																}
															]
														},
														{
															"name": "Assign a task to a user who is not member of the board",
															"event": [
																{
																	"listen": "test",
																	"script": {
																		"id": "bd7f3a4f-090a-4132-9197-f5fd5d43b61a",
																		"exec": [
																			"pm.test(\"Response status is 404 when user to assign is not member of the board\", () => {\r",
																			"    pm.expect(pm.response.code).to.be.equals(404);\r",
																			"});"
																		],
																		"type": "text/javascript"
																	}
																}
															],
															"request": {
																"method": "PUT",
																"header": [],
																"url": {
																	"raw": "{{baseUrl}}/boards/:boardId/tasks/:taskId/assignments/:userId",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"boards",
																		":boardId",
																		"tasks",
																		":taskId",
																		"assignments",
																		":userId"
																	],
																	"variable": [
																		{
																			"description": "(Required) Numeric id of the board",
																			"key": "boardId",
																			"type": "string",
																			"value": "{{existentBoardId}}"
																		},
																		{
																			"description": "(Required) Numeric id of the task",
																			"key": "taskId",
																			"type": "string",
																			"value": "{{existentTaskId}}"
																		},
																		{
																			"description": "(Required) Numeric id of the user",
																			"key": "userId",
																			"type": "string",
																			"value": "{{notMemberId}}"
																		}
																	]
																}
															},
															"response": [
																{
																	"name": "Assignment was added",
																	"originalRequest": {
																		"method": "PUT",
																		"header": [
																			{
																				"description": {
																					"content": "Added as a part of security scheme: bearer",
																					"type": "text/plain"
																				},
																				"key": "Authorization",
																				"value": "Bearer <token>"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/boards/:boardId/tasks/:taskId/assignments/:userId",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"boards",
																				":boardId",
																				"tasks",
																				":taskId",
																				"assignments",
																				":userId"
																			],
																			"variable": [
																				{
																					"key": "boardId"
																				},
																				{
																					"key": "taskId"
																				},
																				{
																					"key": "userId"
																				}
																			]
																		}
																	},
																	"status": "No Content",
																	"code": 204,
																	"_postman_previewlanguage": "text",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "text/plain"
																		}
																	],
																	"cookie": [],
																	"body": ""
																},
																{
																	"name": "Access token is missing or invalid",
																	"originalRequest": {
																		"method": "PUT",
																		"header": [
																			{
																				"description": {
																					"content": "Added as a part of security scheme: bearer",
																					"type": "text/plain"
																				},
																				"key": "Authorization",
																				"value": "Bearer <token>"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/boards/:boardId/tasks/:taskId/assignments/:userId",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"boards",
																				":boardId",
																				"tasks",
																				":taskId",
																				"assignments",
																				":userId"
																			],
																			"variable": [
																				{
																					"key": "boardId"
																				},
																				{
																					"key": "taskId"
																				},
																				{
																					"key": "userId"
																				}
																			]
																		}
																	},
																	"status": "Unauthorized",
																	"code": 401,
																	"_postman_previewlanguage": "text",
																	"header": [
																		{
																			"key": "www-authenticate",
																			"value": "nulla et",
																			"description": ""
																		},
																		{
																			"key": "Content-Type",
																			"value": "text/plain"
																		}
																	],
																	"cookie": [],
																	"body": ""
																},
																{
																	"name": "User not have permission to access the resource",
																	"originalRequest": {
																		"method": "PUT",
																		"header": [
																			{
																				"description": {
																					"content": "Added as a part of security scheme: bearer",
																					"type": "text/plain"
																				},
																				"key": "Authorization",
																				"value": "Bearer <token>"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/boards/:boardId/tasks/:taskId/assignments/:userId",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"boards",
																				":boardId",
																				"tasks",
																				":taskId",
																				"assignments",
																				":userId"
																			],
																			"variable": [
																				{
																					"key": "boardId"
																				},
																				{
																					"key": "taskId"
																				},
																				{
																					"key": "userId"
																				}
																			]
																		}
																	},
																	"status": "Forbidden",
																	"code": 403,
																	"_postman_previewlanguage": "text",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "text/plain"
																		}
																	],
																	"cookie": [],
																	"body": ""
																},
																{
																	"name": "Board, Task or User not found",
																	"originalRequest": {
																		"method": "PUT",
																		"header": [
																			{
																				"description": {
																					"content": "Added as a part of security scheme: bearer",
																					"type": "text/plain"
																				},
																				"key": "Authorization",
																				"value": "Bearer <token>"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/boards/:boardId/tasks/:taskId/assignments/:userId",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"boards",
																				":boardId",
																				"tasks",
																				":taskId",
																				"assignments",
																				":userId"
																			],
																			"variable": [
																				{
																					"key": "boardId"
																				},
																				{
																					"key": "taskId"
																				},
																				{
																					"key": "userId"
																				}
																			]
																		}
																	},
																	"status": "Not Found",
																	"code": 404,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n \"status\": 404,\n \"message\": \"User not found\"\n}"
																}
															]
														},
														{
															"name": "Assign a task to a user who is not exists",
															"event": [
																{
																	"listen": "test",
																	"script": {
																		"id": "4aa9912f-e8b0-48c4-8fea-da7d81bfde5b",
																		"exec": [
																			"pm.test(\"Response status is 404 when user to assign is not exists\", () => {\r",
																			"    pm.expect(pm.response.code).to.be.equals(404);\r",
																			"});"
																		],
																		"type": "text/javascript"
																	}
																}
															],
															"request": {
																"method": "PUT",
																"header": [],
																"url": {
																	"raw": "{{baseUrl}}/boards/:boardId/tasks/:taskId/assignments/:userId",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"boards",
																		":boardId",
																		"tasks",
																		":taskId",
																		"assignments",
																		":userId"
																	],
																	"variable": [
																		{
																			"description": "(Required) Numeric id of the board",
																			"key": "boardId",
																			"type": "string",
																			"value": "{{existentBoardId}}"
																		},
																		{
																			"description": "(Required) Numeric id of the task",
																			"key": "taskId",
																			"type": "string",
																			"value": "{{existentTaskId}}"
																		},
																		{
																			"description": "(Required) Numeric id of the user",
																			"key": "userId",
																			"type": "string",
																			"value": "0"
																		}
																	]
																}
															},
															"response": [
																{
																	"name": "Board, Task or User not found",
																	"originalRequest": {
																		"method": "PUT",
																		"header": [
																			{
																				"description": {
																					"content": "Added as a part of security scheme: bearer",
																					"type": "text/plain"
																				},
																				"key": "Authorization",
																				"value": "Bearer <token>"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/boards/:boardId/tasks/:taskId/assignments/:userId",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"boards",
																				":boardId",
																				"tasks",
																				":taskId",
																				"assignments",
																				":userId"
																			],
																			"variable": [
																				{
																					"key": "boardId"
																				},
																				{
																					"key": "taskId"
																				},
																				{
																					"key": "userId"
																				}
																			]
																		}
																	},
																	"status": "Not Found",
																	"code": 404,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n \"status\": 404,\n \"message\": \"User not found\"\n}"
																},
																{
																	"name": "User not have permission to access the resource",
																	"originalRequest": {
																		"method": "PUT",
																		"header": [
																			{
																				"description": {
																					"content": "Added as a part of security scheme: bearer",
																					"type": "text/plain"
																				},
																				"key": "Authorization",
																				"value": "Bearer <token>"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/boards/:boardId/tasks/:taskId/assignments/:userId",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"boards",
																				":boardId",
																				"tasks",
																				":taskId",
																				"assignments",
																				":userId"
																			],
																			"variable": [
																				{
																					"key": "boardId"
																				},
																				{
																					"key": "taskId"
																				},
																				{
																					"key": "userId"
																				}
																			]
																		}
																	},
																	"status": "Forbidden",
																	"code": 403,
																	"_postman_previewlanguage": "text",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "text/plain"
																		}
																	],
																	"cookie": [],
																	"body": ""
																},
																{
																	"name": "Assignment was added",
																	"originalRequest": {
																		"method": "PUT",
																		"header": [
																			{
																				"description": {
																					"content": "Added as a part of security scheme: bearer",
																					"type": "text/plain"
																				},
																				"key": "Authorization",
																				"value": "Bearer <token>"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/boards/:boardId/tasks/:taskId/assignments/:userId",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"boards",
																				":boardId",
																				"tasks",
																				":taskId",
																				"assignments",
																				":userId"
																			],
																			"variable": [
																				{
																					"key": "boardId"
																				},
																				{
																					"key": "taskId"
																				},
																				{
																					"key": "userId"
																				}
																			]
																		}
																	},
																	"status": "No Content",
																	"code": 204,
																	"_postman_previewlanguage": "text",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "text/plain"
																		}
																	],
																	"cookie": [],
																	"body": ""
																},
																{
																	"name": "Access token is missing or invalid",
																	"originalRequest": {
																		"method": "PUT",
																		"header": [
																			{
																				"description": {
																					"content": "Added as a part of security scheme: bearer",
																					"type": "text/plain"
																				},
																				"key": "Authorization",
																				"value": "Bearer <token>"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/boards/:boardId/tasks/:taskId/assignments/:userId",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"boards",
																				":boardId",
																				"tasks",
																				":taskId",
																				"assignments",
																				":userId"
																			],
																			"variable": [
																				{
																					"key": "boardId"
																				},
																				{
																					"key": "taskId"
																				},
																				{
																					"key": "userId"
																				}
																			]
																		}
																	},
																	"status": "Unauthorized",
																	"code": 401,
																	"_postman_previewlanguage": "text",
																	"header": [
																		{
																			"key": "www-authenticate",
																			"value": "nulla et",
																			"description": ""
																		},
																		{
																			"key": "Content-Type",
																			"value": "text/plain"
																		}
																	],
																	"cookie": [],
																	"body": ""
																}
															]
														},
														{
															"name": "Assign a task when board not exists",
															"event": [
																{
																	"listen": "test",
																	"script": {
																		"id": "8e8baecf-f24b-4bd3-9fcd-7a50605a2c24",
																		"exec": [
																			"pm.test(\"Response status is 404 when board not exists\", () => {\r",
																			"    pm.expect(pm.response.code).to.be.equals(404);\r",
																			"});"
																		],
																		"type": "text/javascript"
																	}
																}
															],
															"request": {
																"method": "PUT",
																"header": [],
																"url": {
																	"raw": "{{baseUrl}}/boards/:boardId/tasks/:taskId/assignments/:userId",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"boards",
																		":boardId",
																		"tasks",
																		":taskId",
																		"assignments",
																		":userId"
																	],
																	"variable": [
																		{
																			"description": "(Required) Numeric id of the board",
																			"key": "boardId",
																			"type": "string",
																			"value": "{{inexistentBoardId}}"
																		},
																		{
																			"description": "(Required) Numeric id of the task",
																			"key": "taskId",
																			"type": "string",
																			"value": "{{existentTaskId}}"
																		},
																		{
																			"description": "(Required) Numeric id of the user",
																			"key": "userId",
																			"type": "string",
																			"value": "{{memberId}}"
																		}
																	]
																}
															},
															"response": [
																{
																	"name": "Board, Task or User not found",
																	"originalRequest": {
																		"method": "PUT",
																		"header": [
																			{
																				"description": {
																					"content": "Added as a part of security scheme: bearer",
																					"type": "text/plain"
																				},
																				"key": "Authorization",
																				"value": "Bearer <token>"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/boards/:boardId/tasks/:taskId/assignments/:userId",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"boards",
																				":boardId",
																				"tasks",
																				":taskId",
																				"assignments",
																				":userId"
																			],
																			"variable": [
																				{
																					"key": "boardId"
																				},
																				{
																					"key": "taskId"
																				},
																				{
																					"key": "userId"
																				}
																			]
																		}
																	},
																	"status": "Not Found",
																	"code": 404,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n \"status\": 404,\n \"message\": \"User not found\"\n}"
																},
																{
																	"name": "Assignment was added",
																	"originalRequest": {
																		"method": "PUT",
																		"header": [
																			{
																				"description": {
																					"content": "Added as a part of security scheme: bearer",
																					"type": "text/plain"
																				},
																				"key": "Authorization",
																				"value": "Bearer <token>"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/boards/:boardId/tasks/:taskId/assignments/:userId",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"boards",
																				":boardId",
																				"tasks",
																				":taskId",
																				"assignments",
																				":userId"
																			],
																			"variable": [
																				{
																					"key": "boardId"
																				},
																				{
																					"key": "taskId"
																				},
																				{
																					"key": "userId"
																				}
																			]
																		}
																	},
																	"status": "No Content",
																	"code": 204,
																	"_postman_previewlanguage": "text",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "text/plain"
																		}
																	],
																	"cookie": [],
																	"body": ""
																},
																{
																	"name": "Access token is missing or invalid",
																	"originalRequest": {
																		"method": "PUT",
																		"header": [
																			{
																				"description": {
																					"content": "Added as a part of security scheme: bearer",
																					"type": "text/plain"
																				},
																				"key": "Authorization",
																				"value": "Bearer <token>"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/boards/:boardId/tasks/:taskId/assignments/:userId",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"boards",
																				":boardId",
																				"tasks",
																				":taskId",
																				"assignments",
																				":userId"
																			],
																			"variable": [
																				{
																					"key": "boardId"
																				},
																				{
																					"key": "taskId"
																				},
																				{
																					"key": "userId"
																				}
																			]
																		}
																	},
																	"status": "Unauthorized",
																	"code": 401,
																	"_postman_previewlanguage": "text",
																	"header": [
																		{
																			"key": "www-authenticate",
																			"value": "nulla et",
																			"description": ""
																		},
																		{
																			"key": "Content-Type",
																			"value": "text/plain"
																		}
																	],
																	"cookie": [],
																	"body": ""
																},
																{
																	"name": "User not have permission to access the resource",
																	"originalRequest": {
																		"method": "PUT",
																		"header": [
																			{
																				"description": {
																					"content": "Added as a part of security scheme: bearer",
																					"type": "text/plain"
																				},
																				"key": "Authorization",
																				"value": "Bearer <token>"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/boards/:boardId/tasks/:taskId/assignments/:userId",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"boards",
																				":boardId",
																				"tasks",
																				":taskId",
																				"assignments",
																				":userId"
																			],
																			"variable": [
																				{
																					"key": "boardId"
																				},
																				{
																					"key": "taskId"
																				},
																				{
																					"key": "userId"
																				}
																			]
																		}
																	},
																	"status": "Forbidden",
																	"code": 403,
																	"_postman_previewlanguage": "text",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "text/plain"
																		}
																	],
																	"cookie": [],
																	"body": ""
																}
															]
														},
														{
															"name": "Assign a task when task not exists",
															"event": [
																{
																	"listen": "test",
																	"script": {
																		"id": "388e5a14-22a6-487b-af09-040f3450dd46",
																		"exec": [
																			"pm.test(\"Response status is 404 when task not exists\", () => {\r",
																			"    pm.expect(pm.response.code).to.be.equals(404);\r",
																			"});"
																		],
																		"type": "text/javascript"
																	}
																}
															],
															"request": {
																"method": "PUT",
																"header": [],
																"url": {
																	"raw": "{{baseUrl}}/boards/:boardId/tasks/:taskId/assignments/:userId",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"boards",
																		":boardId",
																		"tasks",
																		":taskId",
																		"assignments",
																		":userId"
																	],
																	"variable": [
																		{
																			"description": "(Required) Numeric id of the board",
																			"key": "boardId",
																			"type": "string",
																			"value": "{{existentBoardId}}"
																		},
																		{
																			"description": "(Required) Numeric id of the task",
																			"key": "taskId",
																			"type": "string",
																			"value": "{{inexistentTaskId}}"
																		},
																		{
																			"description": "(Required) Numeric id of the user",
																			"key": "userId",
																			"type": "string",
																			"value": "{{memberId}}"
																		}
																	]
																}
															},
															"response": [
																{
																	"name": "Assignment was added",
																	"originalRequest": {
																		"method": "PUT",
																		"header": [
																			{
																				"description": {
																					"content": "Added as a part of security scheme: bearer",
																					"type": "text/plain"
																				},
																				"key": "Authorization",
																				"value": "Bearer <token>"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/boards/:boardId/tasks/:taskId/assignments/:userId",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"boards",
																				":boardId",
																				"tasks",
																				":taskId",
																				"assignments",
																				":userId"
																			],
																			"variable": [
																				{
																					"key": "boardId"
																				},
																				{
																					"key": "taskId"
																				},
																				{
																					"key": "userId"
																				}
																			]
																		}
																	},
																	"status": "No Content",
																	"code": 204,
																	"_postman_previewlanguage": "text",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "text/plain"
																		}
																	],
																	"cookie": [],
																	"body": ""
																},
																{
																	"name": "Access token is missing or invalid",
																	"originalRequest": {
																		"method": "PUT",
																		"header": [
																			{
																				"description": {
																					"content": "Added as a part of security scheme: bearer",
																					"type": "text/plain"
																				},
																				"key": "Authorization",
																				"value": "Bearer <token>"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/boards/:boardId/tasks/:taskId/assignments/:userId",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"boards",
																				":boardId",
																				"tasks",
																				":taskId",
																				"assignments",
																				":userId"
																			],
																			"variable": [
																				{
																					"key": "boardId"
																				},
																				{
																					"key": "taskId"
																				},
																				{
																					"key": "userId"
																				}
																			]
																		}
																	},
																	"status": "Unauthorized",
																	"code": 401,
																	"_postman_previewlanguage": "text",
																	"header": [
																		{
																			"key": "www-authenticate",
																			"value": "nulla et",
																			"description": ""
																		},
																		{
																			"key": "Content-Type",
																			"value": "text/plain"
																		}
																	],
																	"cookie": [],
																	"body": ""
																},
																{
																	"name": "User not have permission to access the resource",
																	"originalRequest": {
																		"method": "PUT",
																		"header": [
																			{
																				"description": {
																					"content": "Added as a part of security scheme: bearer",
																					"type": "text/plain"
																				},
																				"key": "Authorization",
																				"value": "Bearer <token>"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/boards/:boardId/tasks/:taskId/assignments/:userId",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"boards",
																				":boardId",
																				"tasks",
																				":taskId",
																				"assignments",
																				":userId"
																			],
																			"variable": [
																				{
																					"key": "boardId"
																				},
																				{
																					"key": "taskId"
																				},
																				{
																					"key": "userId"
																				}
																			]
																		}
																	},
																	"status": "Forbidden",
																	"code": 403,
																	"_postman_previewlanguage": "text",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "text/plain"
																		}
																	],
																	"cookie": [],
																	"body": ""
																},
																{
																	"name": "Board, Task or User not found",
																	"originalRequest": {
																		"method": "PUT",
																		"header": [
																			{
																				"description": {
																					"content": "Added as a part of security scheme: bearer",
																					"type": "text/plain"
																				},
																				"key": "Authorization",
																				"value": "Bearer <token>"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/boards/:boardId/tasks/:taskId/assignments/:userId",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"boards",
																				":boardId",
																				"tasks",
																				":taskId",
																				"assignments",
																				":userId"
																			],
																			"variable": [
																				{
																					"key": "boardId"
																				},
																				{
																					"key": "taskId"
																				},
																				{
																					"key": "userId"
																				}
																			]
																		}
																	},
																	"status": "Not Found",
																	"code": 404,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n \"status\": 404,\n \"message\": \"User not found\"\n}"
																}
															]
														},
														{
															"name": "Assign a task when not authenticated",
															"event": [
																{
																	"listen": "test",
																	"script": {
																		"id": "04b73705-a7aa-46ff-b1df-4513f2dd5227",
																		"exec": [
																			"pm.test(\"Response status is 401 when not authenticated\", () => {\r",
																			"    pm.expect(pm.response.code).to.be.equals(401);\r",
																			"});"
																		],
																		"type": "text/javascript"
																	}
																}
															],
															"request": {
																"auth": {
																	"type": "noauth"
																},
																"method": "PUT",
																"header": [],
																"url": {
																	"raw": "{{baseUrl}}/boards/:boardId/tasks/:taskId/assignments/:userId",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"boards",
																		":boardId",
																		"tasks",
																		":taskId",
																		"assignments",
																		":userId"
																	],
																	"variable": [
																		{
																			"description": "(Required) Numeric id of the board",
																			"key": "boardId",
																			"type": "string",
																			"value": "{{existentBoardId}}"
																		},
																		{
																			"description": "(Required) Numeric id of the task",
																			"key": "taskId",
																			"type": "string",
																			"value": "{{existentTaskId}}"
																		},
																		{
																			"description": "(Required) Numeric id of the user",
																			"key": "userId",
																			"type": "string",
																			"value": "{{memberId}}"
																		}
																	]
																}
															},
															"response": [
																{
																	"name": "Access token is missing or invalid",
																	"originalRequest": {
																		"method": "PUT",
																		"header": [
																			{
																				"description": {
																					"content": "Added as a part of security scheme: bearer",
																					"type": "text/plain"
																				},
																				"key": "Authorization",
																				"value": "Bearer <token>"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/boards/:boardId/tasks/:taskId/assignments/:userId",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"boards",
																				":boardId",
																				"tasks",
																				":taskId",
																				"assignments",
																				":userId"
																			],
																			"variable": [
																				{
																					"key": "boardId"
																				},
																				{
																					"key": "taskId"
																				},
																				{
																					"key": "userId"
																				}
																			]
																		}
																	},
																	"status": "Unauthorized",
																	"code": 401,
																	"_postman_previewlanguage": "text",
																	"header": [
																		{
																			"key": "www-authenticate",
																			"value": "nulla et",
																			"description": ""
																		},
																		{
																			"key": "Content-Type",
																			"value": "text/plain"
																		}
																	],
																	"cookie": [],
																	"body": ""
																},
																{
																	"name": "User not have permission to access the resource",
																	"originalRequest": {
																		"method": "PUT",
																		"header": [
																			{
																				"description": {
																					"content": "Added as a part of security scheme: bearer",
																					"type": "text/plain"
																				},
																				"key": "Authorization",
																				"value": "Bearer <token>"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/boards/:boardId/tasks/:taskId/assignments/:userId",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"boards",
																				":boardId",
																				"tasks",
																				":taskId",
																				"assignments",
																				":userId"
																			],
																			"variable": [
																				{
																					"key": "boardId"
																				},
																				{
																					"key": "taskId"
																				},
																				{
																					"key": "userId"
																				}
																			]
																		}
																	},
																	"status": "Forbidden",
																	"code": 403,
																	"_postman_previewlanguage": "text",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "text/plain"
																		}
																	],
																	"cookie": [],
																	"body": ""
																},
																{
																	"name": "Board, Task or User not found",
																	"originalRequest": {
																		"method": "PUT",
																		"header": [
																			{
																				"description": {
																					"content": "Added as a part of security scheme: bearer",
																					"type": "text/plain"
																				},
																				"key": "Authorization",
																				"value": "Bearer <token>"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/boards/:boardId/tasks/:taskId/assignments/:userId",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"boards",
																				":boardId",
																				"tasks",
																				":taskId",
																				"assignments",
																				":userId"
																			],
																			"variable": [
																				{
																					"key": "boardId"
																				},
																				{
																					"key": "taskId"
																				},
																				{
																					"key": "userId"
																				}
																			]
																		}
																	},
																	"status": "Not Found",
																	"code": 404,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n \"status\": 404,\n \"message\": \"User not found\"\n}"
																},
																{
																	"name": "Assignment was added",
																	"originalRequest": {
																		"method": "PUT",
																		"header": [
																			{
																				"description": {
																					"content": "Added as a part of security scheme: bearer",
																					"type": "text/plain"
																				},
																				"key": "Authorization",
																				"value": "Bearer <token>"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/boards/:boardId/tasks/:taskId/assignments/:userId",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"boards",
																				":boardId",
																				"tasks",
																				":taskId",
																				"assignments",
																				":userId"
																			],
																			"variable": [
																				{
																					"key": "boardId"
																				},
																				{
																					"key": "taskId"
																				},
																				{
																					"key": "userId"
																				}
																			]
																		}
																	},
																	"status": "No Content",
																	"code": 204,
																	"_postman_previewlanguage": "text",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "text/plain"
																		}
																	],
																	"cookie": [],
																	"body": ""
																}
															]
														}
													],
													"protocolProfileBehavior": {},
													"_postman_isSubFolder": true
												}
											],
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"id": "bf805ad9-9d89-4f4f-a88b-96a15ed058cb",
														"type": "text/javascript",
														"exec": [
															"const baseUrl = pm.environment.get('baseUrl');",
															"const bearerToken = pm.environment.get('bearerToken');",
															"const boardId = pm.environment.get('existentBoardId');",
															"const adminMemberEmail = pm.environment.get('adminMemberEmail');",
															"const memberEmail = pm.environment.get('memberEmail');",
															"function url(uri) {",
															"    return `${baseUrl}${uri}`;",
															"}",
															"",
															"/* ADD MEMBERS TO BOARD */",
															"function addAsMember(member) {",
															"    pm.sendRequest({",
															"        url: url(`/boards/${boardId}/members`),",
															"        method: 'POST',",
															"        header: {",
															"            'Content-Type': 'application/json',",
															"            'Authorization': `Bearer ${bearerToken}`",
															"        },",
															"        body: {",
															"            mode: 'raw',",
															"            raw: {",
															"                email: member.email,",
															"                isAdmin: member.isAdmin",
															"            }",
															"        }",
															"    });",
															"}",
															"[{",
															"    email: adminMemberEmail,",
															"    isAdmin: true",
															"}, ",
															"{",
															"    email: memberEmail,",
															"    isAdmin: false",
															"}].forEach(addAsMember);",
															"",
															""
														]
													}
												},
												{
													"listen": "test",
													"script": {
														"id": "cf0a5dbb-cc7e-41e3-8429-73fd11e5d6b2",
														"type": "text/javascript",
														"exec": [
															""
														]
													}
												}
											],
											"protocolProfileBehavior": {},
											"_postman_isSubFolder": true
										}
									],
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "9f3d4940-3c90-4389-aa3a-35e93a10d244",
												"type": "text/javascript",
												"exec": [
													"const baseUrl = pm.environment.get('baseUrl');",
													"const bearerToken = pm.environment.get('bearerToken');",
													"const boardId = pm.environment.get('existentBoardId');",
													"const listId = pm.environment.get('existentListId');",
													"function url(uri) {",
													"    return `${baseUrl}${uri}`;",
													"}",
													"",
													"/* CREATE TASK TO USE IN THE TESTS */",
													"const existentTaskIdIsNotSet = !pm.environment.get('existentTaskId'); ",
													"if(existentTaskIdIsNotSet) {",
													"    pm.sendRequest({",
													"        url: url(`/boards/${boardId}/tasks`),",
													"        method: 'POST',",
													"        header: {",
													"            'Content-Type': 'application/json',",
													"            'Authorization': `Bearer ${bearerToken}`",
													"        },",
													"        body: {",
													"            mode: 'raw',",
													"            raw: JSON.stringify({",
													"                summary: 'Test Task',",
													"                description: 'Task description',",
													"                tagColor: '9932cc',",
													"                assignedTo: [],",
													"                list: Number(listId)",
													"            })",
													"        }",
													"    }, (err, response) => {",
													"        const { id } = response.json();",
													"        pm.environment.set('existentTaskId', id);",
													"    });",
													"}",
													"",
													"/* SET INEXISTENT TASK ID */",
													"const inexistentTaskIdIsNotSet = !pm.environment.get('inexistentTaskId');",
													"if(inexistentTaskIdIsNotSet) {",
													"    pm.sendRequest({",
													"        url: url(`/boards/${boardId}/tasks`),",
													"        method: 'POST',",
													"        header: {",
													"            'Content-Type': 'application/json',",
													"            'Authorization': `Bearer ${bearerToken}`",
													"        },",
													"        body: {",
													"            mode: 'raw',",
													"            raw: JSON.stringify({",
													"                summary: 'This Task will be deleted',",
													"                description: 'Task description',",
													"                tagColor: '9932cc',",
													"                assignedTo: [],",
													"                list: Number(listId)",
													"            })",
													"        }",
													"    }, (err, response) => {",
													"        const { id } = response.json();",
													"        pm.environment.set('inexistentTaskId', id);",
													"        pm.sendRequest({",
													"            url: url(`/boards/${boardId}/tasks/${id}`),",
													"            method: 'DELETE',",
													"            header: {",
													"                'Content-Type': 'application/json',",
													"                'Authorization': `Bearer ${bearerToken}`",
													"            },",
													"        });",
													"    });",
													"}",
													""
												]
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "261d74e9-36eb-4dcd-a079-6caa4023ea12",
												"type": "text/javascript",
												"exec": [
													""
												]
											}
										}
									],
									"protocolProfileBehavior": {},
									"_postman_isSubFolder": true
								}
							],
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "8b2ba1d2-c118-400d-ac92-1b69d01ac6bd",
										"type": "text/javascript",
										"exec": [
											"const baseUrl = pm.environment.get('baseUrl');",
											"const bearerToken = pm.environment.get('bearerToken');",
											"const boardId = pm.environment.get('existentBoardId');",
											"function url(uri) {",
											"    return `${baseUrl}${uri}`;",
											"}",
											"",
											"/* CREATE LIST TO USE IN THE TESTS */",
											"const existentListIdIsNotSet = !pm.environment.get('existentListId'); ",
											"if(existentListIdIsNotSet) {",
											"    pm.sendRequest({",
											"        url: url(`/boards/${boardId}/lists`),",
											"        method: 'POST',",
											"        header: {",
											"            'Content-Type': 'application/json',",
											"            'Authorization': `Bearer ${bearerToken}`",
											"        },",
											"        body: {",
											"            mode: 'raw',",
											"            raw: JSON.stringify({",
											"                title: 'Test List'",
											"            })",
											"        }",
											"    }, (err, response) => {",
											"        const { id } = response.json();",
											"        pm.environment.set('existentListId', id);",
											"    });",
											"}",
											"",
											"/* SET INEXISTENT LIST ID */",
											"const inexistentListIdIsNotSet = !pm.environment.get('inexistentListId');",
											"if(inexistentListIdIsNotSet) {",
											"    pm.sendRequest({",
											"        url: url(`/boards/${boardId}/lists`),",
											"        method: 'POST',",
											"        header: {",
											"            'Content-Type': 'application/json',",
											"            'Authorization': `Bearer ${bearerToken}`",
											"        },",
											"        body: {",
											"            mode: 'raw',",
											"            raw: JSON.stringify({",
											"                title: 'This list will be deleted'",
											"            })",
											"        }",
											"    }, (err, response) => {",
											"        const { id } = response.json();",
											"        pm.environment.set('inexistentListId', id);",
											"        pm.sendRequest({",
											"            url: url(`/boards/${boardId}/lists/${id}`),",
											"            method: 'DELETE',",
											"            header: {",
											"                'Content-Type': 'application/json',",
											"                'Authorization': `Bearer ${bearerToken}`",
											"            },",
											"        });",
											"    });",
											"}",
											""
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "7f23c750-21d3-48ae-b940-d5a5edc066f5",
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						}
					],
					"auth": {
						"type": "bearer",
						"bearer": [
							{
								"key": "token",
								"value": "{{bearerToken}}",
								"type": "string"
							}
						]
					},
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "e3b4818b-d6a0-4829-9711-602f9b17547c",
								"type": "text/javascript",
								"exec": [
									"const baseUrl = pm.environment.get('baseUrl');",
									"const bearerToken = pm.environment.get('bearerToken');",
									"function url(uri) {",
									"    return `${baseUrl}${uri}`;",
									"}",
									"",
									"/* CREATE BOARD TO USE IN THE TESTS */",
									"const existentBoardIdIsNotSet = !pm.environment.get('existentBoardId'); ",
									"if(existentBoardIdIsNotSet) {",
									"    pm.sendRequest({",
									"        url: url('/boards'),",
									"        method: 'POST',",
									"        header: {",
									"            'Content-Type': 'application/json',",
									"            'Authorization': `Bearer ${bearerToken}`",
									"        },",
									"        body: {",
									"            mode: 'raw',",
									"            raw: JSON.stringify({",
									"                title: 'Test board'",
									"            })",
									"        }",
									"    }, (err, response) => {",
									"        const { id } = response.json();",
									"        pm.environment.set('existentBoardId', id);",
									"    });",
									"}",
									"",
									"/* SET INEXISTENT BOARD ID */",
									"const inexistentBoardIdIsNotSet = !pm.environment.get('inexistentBoardId');",
									"if(inexistentBoardIdIsNotSet) {",
									"    pm.sendRequest({",
									"        url: url('/boards'),",
									"        method: 'POST',",
									"        header: {",
									"            'Content-Type': 'application/json',",
									"            'Authorization': `Bearer ${bearerToken}`",
									"        },",
									"        body: {",
									"            mode: 'raw',",
									"            raw: JSON.stringify({",
									"                title: 'This board will be deleted'",
									"            })",
									"        }",
									"    }, (err, response) => {",
									"        const { id } = response.json();",
									"        pm.environment.set('inexistentBoardId', id);",
									"        pm.sendRequest({",
									"            url: url(`/boards/${id}`),",
									"            method: 'DELETE',",
									"            header: {",
									"                'Content-Type': 'application/json',",
									"                'Authorization': `Bearer ${bearerToken}`",
									"            },",
									"        });",
									"    });",
									"}",
									"",
									"/* CREATE USERS TO USE IN THE TEST */",
									"",
									"function createUser(user) {",
									"    pm.sendRequest({",
									"        url: url('/users'),",
									"        method: 'POST',",
									"        header: {",
									"            'Content-Type': 'application/json',",
									"        },",
									"        body: {",
									"            mode: 'raw',",
									"            raw: JSON.stringify({",
									"                email: user.email,",
									"                name: user.email,",
									"                password: user.password,",
									"                confirmPassword: user.password",
									"            })",
									"        }",
									"    }, (err, response) => {",
									"        const { id } = response.json();",
									"        pm.environment.set(user.idKey, id);",
									"        pm.environment.set(user.emailKey, user.email);",
									"    });",
									"}",
									"",
									"const users = [{",
									"    email: 'adminMember@example.com',",
									"    password: 'password',",
									"    idKey: 'adminMemberId',",
									"    emailKey: 'adminMemberEmail'",
									"},",
									"{",
									"    email: 'notMember@example.com',",
									"    password: 'password',",
									"    idKey: 'notMemberId',",
									"    emailKey: 'notMemberEmail'",
									"},",
									"{",
									"    email: 'member@example.com',",
									"    password: 'password',",
									"    idKey: 'memberId',",
									"    emailKey: 'memberEmail'",
									"}];",
									"",
									"function requireRegister(user) {",
									"    return !pm.environment.get(user.idKey) || !pm.environment.get(user.emailKey);  ",
									"}",
									"",
									"users",
									"    .filter(requireRegister)",
									"    .forEach(createUser);",
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "5ea466c8-2152-4004-adbe-c401142528ae",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				}
			],
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "c2f30545-61cd-48a9-af74-0a0b5e9e30b9",
						"type": "text/javascript",
						"exec": [
							"const baseUrl = pm.environment.get('baseUrl');",
							"function url(uri) {",
							"    return `${baseUrl}${uri}`;",
							"}",
							"",
							"const user = {",
							"    email: 'default@example.com',",
							"    password: 'password'",
							"};",
							"",
							"pm.sendRequest({",
							"        url: url('/users'),",
							"        method: 'POST',",
							"        header: {",
							"            'Content-Type': 'application/json',",
							"        },",
							"        body: {",
							"            mode: 'raw',",
							"            raw: JSON.stringify({",
							"                email: user.email,",
							"                name: 'Default',",
							"                password: user.password,",
							"                confirmPassword: user.password",
							"            })",
							"        }",
							"    }, ",
							"    () => {",
							"        pm.sendRequest({",
							"            url: url('/login'),",
							"            method: 'POST',",
							"            header: {",
							"                'Content-Type': 'application/json',",
							"            },",
							"            body: {",
							"                mode: 'raw',",
							"                raw: JSON.stringify(user)",
							"            }",
							"        }, ",
							"        (err, response) => {",
							"            const { token } = response.json();",
							"            pm.environment.set('bearerToken', token);",
							"        });",
							"});"
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "2835ba4c-571e-4a2f-9c4b-7b50c9ecbd73",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "Users",
			"item": [
				{
					"name": "Register User",
					"item": [
						{
							"name": "Register a user",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "e7abfc1d-8f70-41a5-83cb-4b6378d8e1c4",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "2113dea2-4a36-4f3b-a114-37f0e6eec484",
										"exec": [
											"pm.test(\"Response status is 201 when success\", () => {\r",
											"    pm.expect(pm.response.code).to.be.equals(201);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"User A\",\n    \"email\": \"user@example.com\",\n    \"password\": \"password\",\n    \"confirmPassword\": \"password\"\n}",
									"options": {
										"raw": {}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/users",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"users"
									]
								}
							},
							"response": [
								{
									"name": "One or more validation errors occurred.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: bearer",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/users",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"users"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"status\": 400,\n \"message\": \"One or more validation errors occurred.\",\n \"errors\": [\n  {\n   \"message\": \"name is mandatory\",\n   \"property\": \"name\"\n  }\n ]\n}"
								},
								{
									"name": "User was created",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: bearer",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/users",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"users"
											]
										}
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Location",
											"value": "sint irure incididunt dolore reprehenderit",
											"description": "URL where the resource can be accessed"
										},
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"id\": 56080863,\n \"name\": \"est ex\",\n \"email\": \"egpDotBDfsK@K.gg\"\n}"
								},
								{
									"name": "An error response with 409 status code",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: bearer",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/users",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"users"
											]
										}
									},
									"status": "Conflict",
									"code": 409,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"status\": 409,\n \"message\": \"Email already in use\"\n}"
								}
							]
						},
						{
							"name": "Register duplicate user",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "6f90ff6b-836d-40b6-ba76-563600026e03",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "86f3b53e-1a5c-4560-9f8e-4c221788856a",
										"exec": [
											"pm.test(\"Response status is 409 when user is duplicate\", () => {\r",
											"    pm.sendRequest(pm.request, (err, response) => {\r",
											"        pm.expect(response.code).to.be.equals(409);\r",
											"    });\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"Duplicate User\",\n    \"email\": \"duplicateUser@example.com\",\n    \"password\": \"password\",\n    \"confirmPassword\": \"password\"\n}",
									"options": {
										"raw": {}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/users",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"users"
									]
								}
							},
							"response": [
								{
									"name": "An error response with 409 status code",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: bearer",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/users",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"users"
											]
										}
									},
									"status": "Conflict",
									"code": 409,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"status\": 409,\n \"message\": \"Email already in use\"\n}"
								},
								{
									"name": "User was created",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: bearer",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/users",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"users"
											]
										}
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Location",
											"value": "sint irure incididunt dolore reprehenderit",
											"description": "URL where the resource can be accessed"
										},
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"id\": 56080863,\n \"name\": \"est ex\",\n \"email\": \"egpDotBDfsK@K.gg\"\n}"
								},
								{
									"name": "One or more validation errors occurred.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: bearer",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/users",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"users"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"status\": 400,\n \"message\": \"One or more validation errors occurred.\",\n \"errors\": [\n  {\n   \"message\": \"name is mandatory\",\n   \"property\": \"name\"\n  }\n ]\n}"
								}
							]
						},
						{
							"name": "Register a user with invalid name",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "116345b0-3376-41bf-98ab-e79d83ebe2f7",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "8e2e020e-c933-45f0-8631-51200e33e813",
										"exec": [
											"pm.test(\"Response status is 400 when name is invalid\", () => {\r",
											"    pm.expect(pm.response.code).to.be.equals(400);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"name\": \"\",\n  \"email\": \"user@example.com\",\n  \"password\": \"password\",\n  \"confirmPassword\": \"password\"\n}",
									"options": {
										"raw": {}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/users",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"users"
									]
								}
							},
							"response": [
								{
									"name": "An error response with 409 status code",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: bearer",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/users",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"users"
											]
										}
									},
									"status": "Conflict",
									"code": 409,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"status\": 409,\n \"message\": \"Email already in use\"\n}"
								},
								{
									"name": "One or more validation errors occurred.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: bearer",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/users",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"users"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"status\": 400,\n \"message\": \"One or more validation errors occurred.\",\n \"errors\": [\n  {\n   \"message\": \"name is mandatory\",\n   \"property\": \"name\"\n  }\n ]\n}"
								},
								{
									"name": "User was created",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: bearer",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/users",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"users"
											]
										}
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Location",
											"value": "sint irure incididunt dolore reprehenderit",
											"description": "URL where the resource can be accessed"
										},
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"id\": 56080863,\n \"name\": \"est ex\",\n \"email\": \"egpDotBDfsK@K.gg\"\n}"
								}
							]
						},
						{
							"name": "Register a user with diferent password",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "c3d88ee0-a46a-47a6-aaa1-834195e87448",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "a7ec32d4-0994-46f2-8b4a-78fcc8593d10",
										"exec": [
											"pm.test(\"Response status is 400 when passwords doesn't match\", () => {\r",
											"    pm.expect(pm.response.code).to.be.equals(400);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"name\": \"User A\",\n  \"email\": \"user@example.com\",\n  \"password\": \"password\",\n  \"confirmPassword\": \"password2\"\n}",
									"options": {
										"raw": {}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/users",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"users"
									]
								}
							},
							"response": [
								{
									"name": "User was created",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: bearer",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/users",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"users"
											]
										}
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Location",
											"value": "sint irure incididunt dolore reprehenderit",
											"description": "URL where the resource can be accessed"
										},
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"id\": 56080863,\n \"name\": \"est ex\",\n \"email\": \"egpDotBDfsK@K.gg\"\n}"
								},
								{
									"name": "One or more validation errors occurred.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: bearer",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/users",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"users"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"status\": 400,\n \"message\": \"One or more validation errors occurred.\",\n \"errors\": [\n  {\n   \"message\": \"name is mandatory\",\n   \"property\": \"name\"\n  }\n ]\n}"
								},
								{
									"name": "An error response with 409 status code",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: bearer",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/users",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"users"
											]
										}
									},
									"status": "Conflict",
									"code": 409,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"status\": 409,\n \"message\": \"Email already in use\"\n}"
								}
							]
						},
						{
							"name": "Register a user with invalid email",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "f1347d8b-6e6d-43fc-ae1e-0033c859faa4",
										"exec": [
											"pm.test(\"Response status is 400 when email is invalid\", () => {\r",
											"    pm.expect(pm.response.code).to.be.equals(400);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"User A\",\n    \"email\": \"userexample.com\",\n    \"password\": \"password\",\n    \"confirmPassword\": \"password\"\n}",
									"options": {
										"raw": {}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/users",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"users"
									]
								}
							},
							"response": [
								{
									"name": "One or more validation errors occurred.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: bearer",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/users",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"users"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"status\": 400,\n \"message\": \"One or more validation errors occurred.\",\n \"errors\": [\n  {\n   \"message\": \"name is mandatory\",\n   \"property\": \"name\"\n  }\n ]\n}"
								},
								{
									"name": "An error response with 409 status code",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: bearer",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/users",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"users"
											]
										}
									},
									"status": "Conflict",
									"code": 409,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"status\": 409,\n \"message\": \"Email already in use\"\n}"
								},
								{
									"name": "User was created",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: bearer",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/users",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"users"
											]
										}
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Location",
											"value": "sint irure incididunt dolore reprehenderit",
											"description": "URL where the resource can be accessed"
										},
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"id\": 56080863,\n \"name\": \"est ex\",\n \"email\": \"egpDotBDfsK@K.gg\"\n}"
								}
							]
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "Login",
					"item": [
						{
							"name": "Login",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "472fc54a-234f-4e06-8505-96538253bba6",
										"exec": [
											"pm.test(\"Response status is 200 when success\", () => {\r",
											"    pm.expect(pm.response.code).to.be.equals(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Returns a JWT when success\", () => {\r",
											"    const data = pm.response.json();\r",
											"    pm.expect(data).have.property('token');\r",
											"    pm.expect(data.token).to.be.an('string');\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"email\": \"user@example.com\",\n  \"password\": \"password\"\n}",
									"options": {
										"raw": {}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/login",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"login"
									]
								}
							},
							"response": [
								{
									"name": "Cannot login due to invalid credentials",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: bearer",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/login",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"login"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"status\": \"400,\",\n \"message\": \"Couldn't create the user\",\n \"errors\": [\n  {\n   \"message\": \"Invalid credentials\",\n   \"property\": \"Password\"\n  }\n ]\n}"
								},
								{
									"name": "User not found",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: bearer",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/login",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"login"
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"status\": 404,\n \"message\": \"User not found\"\n}"
								},
								{
									"name": "Return a valid jwt and the user data",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: bearer",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/login",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"login"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"token\": \"eiusmod irure ea\",\n \"user\": {\n  \"id\": -63896743,\n  \"name\": \"in in\",\n  \"email\": \"BjYN@NeBRiy.dtku\"\n }\n}"
								}
							]
						},
						{
							"name": "Login with inexistent user",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "fa1f2d9b-4f4b-4038-9cb4-33f4d657fdb2",
										"exec": [
											"pm.test(\"Response status is 404 when user not exist\", () => {\r",
											"    pm.expect(pm.response.code).to.be.equals(404);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"email\": \"unknow@example.com\",\n  \"password\": \"password\"\n}",
									"options": {
										"raw": {}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/login",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"login"
									]
								}
							},
							"response": [
								{
									"name": "User not found",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: bearer",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/login",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"login"
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"status\": 404,\n \"message\": \"User not found\"\n}"
								},
								{
									"name": "Cannot login due to invalid credentials",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: bearer",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/login",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"login"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"status\": \"400,\",\n \"message\": \"Couldn't create the user\",\n \"errors\": [\n  {\n   \"message\": \"Invalid credentials\",\n   \"property\": \"Password\"\n  }\n ]\n}"
								},
								{
									"name": "Return a valid jwt and the user data",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: bearer",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/login",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"login"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"token\": \"eiusmod irure ea\",\n \"user\": {\n  \"id\": -63896743,\n  \"name\": \"in in\",\n  \"email\": \"BjYN@NeBRiy.dtku\"\n }\n}"
								}
							]
						},
						{
							"name": "Login with wrong password",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "973b270d-9219-45fa-84da-249b58951cf0",
										"exec": [
											"pm.test(\"Response status is 400 when password is invalid\", () => {\r",
											"    pm.expect(pm.response.code).to.be.equals(400);\r",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "68b86bea-8591-4507-8659-0f8f95834c09",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"email\": \"user@example.com\",\n    \"password\": \"wrong password\"\n}",
									"options": {
										"raw": {}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/login",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"login"
									]
								}
							},
							"response": [
								{
									"name": "User not found",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: bearer",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/login",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"login"
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"status\": 404,\n \"message\": \"User not found\"\n}"
								},
								{
									"name": "Cannot login due to invalid credentials",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: bearer",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/login",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"login"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"status\": \"400,\",\n \"message\": \"Couldn't create the user\",\n \"errors\": [\n  {\n   \"message\": \"Invalid credentials\",\n   \"property\": \"Password\"\n  }\n ]\n}"
								},
								{
									"name": "Return a valid jwt and the user data",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: bearer",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/login",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"login"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"token\": \"eiusmod irure ea\",\n \"user\": {\n  \"id\": -63896743,\n  \"name\": \"in in\",\n  \"email\": \"BjYN@NeBRiy.dtku\"\n }\n}"
								}
							]
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				}
			],
			"protocolProfileBehavior": {}
		}
	],
	"auth": {
		"type": "bearer",
		"bearer": [
			{
				"key": "token",
				"value": "<Bearer Token>",
				"type": "string"
			}
		]
	},
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"id": "036cfda0-2118-43e5-961d-fb4dd172bd32",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"id": "b4375994-bccb-41fd-8426-80d838cca5c8",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"id": "827a7a50-1185-4360-95c6-6fe538515db9",
			"key": "baseUrl",
			"value": "/api/v1"
		}
	],
	"protocolProfileBehavior": {}
}
